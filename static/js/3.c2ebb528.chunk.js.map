{"version":3,"sources":["UI/ProfilePage/OwnerProfilePage/OwnerProfilePageForm/OwnerProfilePageForm.jsx","BLL/ownerProfilePage/selectors.js","BLL/ownerProfilePage/actionCreators.js","BLL/ownerProfilePage/thunkCreators.js","UI/ProfilePage/OwnerProfilePage/OwnerProfilePageForm/OwnerProfilePageFormContainer.jsx","UI/ProfilePage/OwnerProfilePage/OwnerProfilePagePhoto/OwnerProfilePagePhoto.jsx","UI/ProfilePage/OwnerProfilePage/OwnerProfilePagePhoto/OwnerProfilePagePhotoContainer.jsx","UI/ProfilePage/OwnerProfilePage/OwnerProfilePage.jsx","UI/ProfilePage/SomeoneElseProfilePage/SomeoneElseProfilePage.jsx","BLL/notOwnerUserData/selectors.js","UI/ProfilePage/SomeoneElseProfilePage/SomeoneElseProfilePageContainer.jsx","UI/HOC/withAuth.jsx","UI/ProfilePage/ProfilePageContainer.jsx"],"names":["OwnerProfilePageForm","props","onSubmit","handleSubmit","className","InputReactHookForm","register","CSSclasses","type","name","errors","status","minLength","required","placeholder","fullName","aboutMe","ref","defaultChecked","lookingForAJob","lookingForAJobDescription","contactsKeysArray","map","contactKey","cn","isSaveChangesButtonClicked","ButtonPreloader","displayNone","dotsCount","classes","getOwnerProfilePageIsSaveChangesButtonClickedSelector","state","ownerProfilePage","isOwnerProfilePageSaveChangesButtonClicked","isClicked","IS_OWNER_PROFILE_PAGE_SAVE_CHANGES_BUTTON_CLICKED","isOwnerProfilePageUpdatePhotoButtonClicked","IS_OWNER_PROFILE_PAGE_UPDATE_PHOTO_BUTTON_CLICKED","updateOwnerStatusThunkCreator","dispatch","a","userInfoAPI","updateOwnerStatus","data","resultCode","setUserStatusIntoState","alert","updateOwnerInfoThunkCreator","ownerInfoObj","updateOwnerInfo","setUserInfoIntoState","mapDispatchToProps","toogleLoockingForAJobInState","compose","connect","isLoggedIn","selectors","ownerId","smallPhoto","largePhoto","contacts","withRouter","Object","keys","useForm","defaultValues","facebook","github","instagram","mainLink","twitter","vk","website","youtube","match","params","userId","formData","photos","small","large","OwnerProfilePagePhoto","src","alt","onChange","e","onMainAvatarSelected","target","files","getOwnerLargePhotoSelector","updateOwnerPhotoThunkCreator","photo","updateOwnerPhoto","response","setUserPhotosIntoState","OwnerProfilePage","SomeoneElseProfilePage","href","rel","defaultPhoto","getNotOwnerStatusSelector","notOwnerUserData","getNotOwnerFullNameSelector","getNotOwnerSmallPhotoSelector","getNotOwnerLargePhotoSelector","getNotOwnerIdSelector","id","getNotOwnerLookingForAJobSelector","getNotOwnerLookingForAJobDescriptionSelector","getNotOwnerAboutMeSelector","getNotOwnerContactsSelector","notOwnerUserProfileThunkCreator","useEffect","mapStateToProps","getIsLoggedInSelector","getOwnerIdSelector","notOwnerId","Component","setIsModalLoginWindowActive","toogleIsLoginRequirement","to","Number","userIdFromUrl"],"mappings":"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","file":"static/js/3.c2ebb528.chunk.js","sourcesContent":["import React from \"react\";\r\nimport ButtonPreloader from \"../../../common/ButtonPreloader\";\r\nimport cn from \"classnames\";\r\nimport InputReactHookForm from \"../../../common/InputReactHookForm\";\r\n\r\n\r\nlet OwnerProfilePageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit(props.onSubmit)}>\r\n            <div className=\"profile__item-wrapper\">\r\n                <p className=\"profile__item-title\">My Status:</p>{\" \"}\r\n                <InputReactHookForm\r\n                    register={props.register}\r\n                    CSSclasses={[\"login__form-input\"]}\r\n                    type=\"text\"\r\n                    name=\"status\"\r\n                    errors={props.errors.status}\r\n                    minLength={3}\r\n                    required={true}\r\n                    placeholder={\"Enter Your Status\"}\r\n                />\r\n            </div>\r\n            <div className=\"profile__item-wrapper\">\r\n                <p className=\"profile__item-title\">My Name:</p>{\" \"}\r\n                <InputReactHookForm\r\n                    register={props.register}\r\n                    CSSclasses={[\"login__form-input\"]}\r\n                    type=\"text\"\r\n                    name=\"fullName\"\r\n                    errors={props.errors.fullName}\r\n                    minLength={3}\r\n                    required={true}\r\n                    placeholder={\"Enter Your Name\"}\r\n                />\r\n            </div>\r\n            <div className=\"profile__item-wrapper\">\r\n                <p className=\"profile__item-title\">About Me:</p>{\" \"}\r\n                <InputReactHookForm\r\n                    register={props.register}\r\n                    CSSclasses={[\"login__form-input\"]}\r\n                    type=\"text\"\r\n                    name=\"aboutMe\"\r\n                    errors={props.errors.aboutMe}\r\n                    minLength={3}\r\n                    required={true}\r\n                    placeholder={\"Enter About Me Information\"}\r\n                />\r\n            </div>\r\n            <div className=\"profile__item-wrapper\">\r\n                <p className=\"profile__item-title\">Looking for a Job:</p>{\" \"}<input ref={props.register} name=\"lookingForAJob\" className=\"profile__item-checkbox\"\r\n                    type=\"checkbox\" defaultChecked={props.lookingForAJob} />\r\n            </div>\r\n            <div className=\"profile__item-wrapper\">\r\n                <p className=\"profile__item-title\">Job Description:</p>{\" \"}\r\n                <InputReactHookForm\r\n                    register={props.register}\r\n                    CSSclasses={[\"login__form-input\"]}\r\n                    type=\"text\"\r\n                    name=\"lookingForAJobDescription\"\r\n                    errors={props.errors.lookingForAJobDescription}\r\n                    minLength={3}\r\n                    required={true}\r\n                    placeholder={\"Enter Your Job Description\"}\r\n                />\r\n            </div>\r\n            <div className=\"profile__contacts\">\r\n                <p className=\"profile__contacts-title\">My Contacts:</p>{\" \"}\r\n                <ul className=\"profile__contacts-ul\">\r\n                    {props.contactsKeysArray.map(contactKey => {\r\n                        return (<li key={contactKey}>{contactKey + \": \"}\r\n                            <input ref={props.register} name={contactKey} className=\"profile__item\" type=\"text\"\r\n                                placeholder={props[contactKey] ? props[contactKey] : \"Enter \" + contactKey + \" information\"}\r\n\r\n                            /></li>);\r\n                    })}\r\n                </ul>\r\n            </div>\r\n\r\n            <button className={cn(\"button\", \"button_profile\", \"button_pos-r\", { \"displaynone\": props.isSaveChangesButtonClicked })}>Save Changes</button>\r\n\r\n            <ButtonPreloader displayNone={!props.isSaveChangesButtonClicked} dotsCount={10} classes={[\"loader\"]} />\r\n\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default (OwnerProfilePageForm);","export const getOwnerProfilePageIsSaveChangesButtonClickedSelector =  (state) => {\r\n    return state.ownerProfilePage.isSaveChangesButtonClicked;\r\n}\r\n\r\nexport const getOwnerProfilePageIsUpdatePhotoButtonClickedSelector =  (state) => {\r\n    return state.ownerProfilePage.isUpdatePhotoButtonClicked;\r\n}\r\n\r\n","import {\r\n    IS_OWNER_PROFILE_PAGE_SAVE_CHANGES_BUTTON_CLICKED,\r\n    IS_OWNER_PROFILE_PAGE_UPDATE_PHOTO_BUTTON_CLICKED\r\n} from \"./actionTypes\";\r\n\r\nexport const isOwnerProfilePageSaveChangesButtonClicked = (isClicked) => ({ type: IS_OWNER_PROFILE_PAGE_SAVE_CHANGES_BUTTON_CLICKED, isClicked });\r\nexport const isOwnerProfilePageUpdatePhotoButtonClicked = (isClicked) => ({ type: IS_OWNER_PROFILE_PAGE_UPDATE_PHOTO_BUTTON_CLICKED, isClicked });","import { userInfoAPI } from \"../../DAL/userInfo/api\";\r\nimport {\r\n    isOwnerProfilePageSaveChangesButtonClicked,\r\n    isOwnerProfilePageUpdatePhotoButtonClicked\r\n} from \"./actionCreators\";\r\nimport { setUserStatusIntoState, setUserInfoIntoState } from \"../authUserData/actionCreators\";\r\nimport { setUserPhotosIntoState } from \"../authUserData/actionCreators\";\r\n\r\nexport const updateOwnerStatusThunkCreator = (status) => async (dispatch) => {\r\n    dispatch(isOwnerProfilePageSaveChangesButtonClicked(true));\r\n\r\n    const response = await userInfoAPI.updateOwnerStatus(status);\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setUserStatusIntoState(status));\r\n        dispatch(isOwnerProfilePageSaveChangesButtonClicked(false));\r\n    } else {\r\n        dispatch(isOwnerProfilePageSaveChangesButtonClicked(false));\r\n        alert(\"Some Error\");\r\n    }\r\n}\r\n\r\nexport const updateOwnerInfoThunkCreator = (ownerInfoObj) => async (dispatch) => {\r\n    dispatch(isOwnerProfilePageSaveChangesButtonClicked(true));\r\n\r\n    const response = await userInfoAPI.updateOwnerInfo(ownerInfoObj);\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setUserInfoIntoState(ownerInfoObj));\r\n        dispatch(isOwnerProfilePageSaveChangesButtonClicked(false));\r\n    } else {\r\n        dispatch(isOwnerProfilePageSaveChangesButtonClicked(false));\r\n        alert(\"Some Error\");\r\n    }\r\n}\r\n\r\nexport const updateOwnerPhotoThunkCreator = (photo) => async (dispatch) => {\r\n    dispatch(isOwnerProfilePageUpdatePhotoButtonClicked(true));\r\n\r\n    const response = await userInfoAPI.updateOwnerPhoto(photo);\r\n\r\n    if (response.data.resultCode === 0) {\r\n        const photos = {\r\n            small: response.data.data.photos.small,\r\n            large: response.data.data.photos.large\r\n        }\r\n\r\n        dispatch(setUserPhotosIntoState(photos));\r\n        dispatch(isOwnerProfilePageUpdatePhotoButtonClicked(false));\r\n    } else {\r\n        dispatch(isOwnerProfilePageUpdatePhotoButtonClicked(false));\r\n        alert(\"Some Error\");\r\n    }\r\n}","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport OwnerProfilePageForm from \"./OwnerProfilePageForm\";\r\nimport * as selectors from \"../../../../BLL/authUserData/selectors\";\r\nimport { getOwnerProfilePageIsSaveChangesButtonClickedSelector } from \"../../../../BLL/ownerProfilePage/selectors\";\r\nimport { updateOwnerStatusThunkCreator, updateOwnerInfoThunkCreator } from \"../../../../BLL/ownerProfilePage/thunkCreators\";\r\nimport { toogleLoockingForAJobInState } from \"../../../../BLL/authUserData/actionCreators\";\r\nimport { compose } from \"redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nconst OwnerProfilePageFormContainer = (props) => {\r\n\r\n    const contactsKeysArray = Object.keys(props.contacts);      // записываем в массив ключи объекта props.contacts, чтобы потом удобнос ними работать  через mapcontactsKeysArray\r\n\r\n    const { register, handleSubmit, errors } = useForm({\r\n        defaultValues: {\r\n            status: props.status ? props.status : null,\r\n            fullName: props.fullName ? props.fullName : null,\r\n            aboutMe: props.aboutMe ? props.aboutMe : null,\r\n            lookingForAJobDescription: props.lookingForAJobDescription ? props.lookingForAJobDescription : null,\r\n            facebook: props.contacts.facebook ? props.contacts.facebook : null,\r\n            github: props.contacts.github ? props.contacts.github : null,\r\n            instagram: props.contacts.instagram ? props.contacts.instagram : null,\r\n            mainLink: props.contacts.mainLink ? props.contacts.mainLink : null,\r\n            twitter: props.contacts.twitter ? props.contacts.twitter : null,\r\n            vk: props.contacts.vk ? props.contacts.vk : null,\r\n            website: props.contacts.website ? props.contacts.website : null,\r\n            youtube: props.contacts.youtube ? props.contacts.youtube : null\r\n        }\r\n    });\r\n\r\n    function onSubmit(formData) {\r\n        // тут действия которые выполнятся при сабмите формы\r\n        const ownerInfoObj = {\r\n            status: formData.status ? formData.status : null,\r\n            fullName: formData.fullName ? formData.fullName : null,\r\n            aboutMe: formData.aboutMe ? formData.aboutMe : null,\r\n            lookingForAJob: formData.lookingForAJob,\r\n            lookingForAJobDescription: formData.lookingForAJobDescription ? formData.lookingForAJobDescription : null,\r\n            contacts: {\r\n                facebook: formData.facebook ? formData.facebook : null,\r\n                github: formData.github ? formData.github : null,\r\n                instagram: formData.instagram ? formData.instagram : null,\r\n                mainLink: formData.mainLink ? formData.mainLink : null,\r\n                twitter: formData.twitter ? formData.twitter : null,\r\n                vk: formData.vk ? formData.vk : null,\r\n                website: formData.website ? formData.website : null,\r\n                youtube: formData.youtube ? formData.youtube : null\r\n            },\r\n            photos: {\r\n                small: props.smallPhoto ? props.smallPhoto : null,\r\n                large: props.largePhoto ? props.largePhoto : null\r\n            }\r\n        }\r\n\r\n        if(ownerInfoObj.status !== props.status) {\r\n            props.updateOwnerStatusThunkCreator(ownerInfoObj.status)\r\n        }\r\n\r\n        props.updateOwnerInfoThunkCreator(ownerInfoObj);\r\n    }\r\n\r\n    // debugger\r\n    // props.userIdFromUrl = Number(props.userIdFromUrl);\r\n    if (props.isLoggedIn && props.match.params.userId === props.ownerId) {\r\n        return (\r\n            <OwnerProfilePageForm\r\n                {...props}\r\n                contactsKeysArray={contactsKeysArray}\r\n                onSubmit={onSubmit}\r\n                register={register}\r\n                handleSubmit={handleSubmit}\r\n                errors={errors}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isLoggedIn: selectors.getIsLoggedInSelector(state),\r\n        ownerId: selectors.getOwnerIdSelector(state),\r\n        status: selectors.getOwnerStatusSelector(state),\r\n        fullName: selectors.getOwnerFullNameSelector(state),\r\n        smallPhoto: selectors.getOwnerSmallPhotoSelector(state),\r\n        largePhoto: selectors.getOwnerLargePhotoSelector(state),\r\n        lookingForAJob: selectors.getOwnerLookingForAJobSelector(state),\r\n        lookingForAJobDescription: selectors.getOwnerLookingForAJobDescriptionSelector(state),\r\n        aboutMe: selectors.getOwnerAboutMeSelector(state),\r\n        contacts: selectors.getOwnerContactsSelector(state),\r\n        isSaveChangesButtonClicked: getOwnerProfilePageIsSaveChangesButtonClickedSelector(state),\r\n        updateOwnerStatusThunkCreator: updateOwnerStatusThunkCreator,\r\n        updateOwnerInfoThunkCreator: updateOwnerInfoThunkCreator\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    updateOwnerStatusThunkCreator,\r\n    updateOwnerInfoThunkCreator,\r\n    toogleLoockingForAJobInState\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withRouter\r\n)(OwnerProfilePageFormContainer);","import React from \"react\";\r\n// import { withRouter } from \"react-router-dom\";\r\nimport ButtonPreloader from \"../../../common/ButtonPreloader\";\r\n\r\nconst OwnerProfilePagePhoto = (props) => {\r\n    return (\r\n        <div className=\"profile__photo\">\r\n            <p>My Photo:</p>\r\n            <img src={props.largePhoto} alt=\"user\" className=\"profile__photo-img\" />\r\n            <label className=\"button button_profile-photo\">\r\n                <input type=\"file\" onChange={ (e) => props.onMainAvatarSelected(e.target.files[0]) } />Update Photo\r\n            </label>\r\n\r\n            <ButtonPreloader displayNone={true} dotsCount={10} classes={[\"loader\"]} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default OwnerProfilePagePhoto;","import React from \"react\";\r\nimport OwnerProfilePagePhoto from \"./OwnerProfilePagePhoto\";\r\nimport { getOwnerLargePhotoSelector } from \"../../../../BLL/authUserData/selectors\";\r\nimport { updateOwnerPhotoThunkCreator } from \"../../../../BLL/ownerProfilePage/thunkCreators\";\r\nimport { connect } from \"react-redux\";\r\n\r\n\r\nconst OwnerProfilePagePhotoContainer = (props) => {\r\n\r\n    function onMainAvatarSelected(photo) {\r\n        props.updateOwnerPhotoThunkCreator(photo);\r\n    }\r\n\r\n    return (\r\n        <OwnerProfilePagePhoto\r\n            largePhoto={props.largePhoto}\r\n            onMainAvatarSelected={onMainAvatarSelected}\r\n        />\r\n    );\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        largePhoto: getOwnerLargePhotoSelector(state)\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { updateOwnerPhotoThunkCreator })(OwnerProfilePagePhotoContainer);","import React from \"react\";\r\n// import { withRouter } from \"react-router-dom\";\r\nimport OwnerProfilePageFormContainer from \"./OwnerProfilePageForm/OwnerProfilePageFormContainer\";\r\nimport OwnerProfilePagePhotoContainer from \"./OwnerProfilePagePhoto/OwnerProfilePagePhotoContainer\";\r\n\r\nconst OwnerProfilePage = (props) => {\r\n    \r\n    return (\r\n        <div className=\"grid-wrapper__content profile\">\r\n\r\n            <OwnerProfilePageFormContainer />\r\n            \r\n            <OwnerProfilePagePhotoContainer />\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default OwnerProfilePage;","import React from \"react\";\r\nimport defaultPhoto from \"../../../assets/img/default_photo.png\"\r\n\r\nconst SomeoneElseProfilePage = (props) => {\r\n    return (\r\n        <div className=\"grid-wrapper__content profile\">\r\n            <div className=\"profile__item-wrapper\">\r\n                <p className=\"profile__item-title\">My Status:</p>{\" \"}<p className=\"profile__item\">{ props.status ? props.status : \"I Have No Status\" }</p>\r\n            </div>\r\n            <div className=\"profile__item-wrapper\">\r\n                <p className=\"profile__item-title\">My Name:</p>{\" \"}<p className=\"profile__item\">{ props.fullName ? props.fullName : \"I Have No Name\" }</p>\r\n            </div>\r\n            <div className=\"profile__item-wrapper\">\r\n                <p className=\"profile__item-title\">About Me:</p>{\" \"}<p className=\"profile__item\">{ props.aboutMe ? props.aboutMe : \"I Have No About Me Information\" }</p>\r\n            </div>\r\n            <div className=\"profile__item-wrapper\">\r\n                <p className=\"profile__item-title\">Looking for a Job:</p>{\" \"}<p className=\"profile__item\">{ props.lookingForAJob ? \"Yes\" : \"No\" }</p>\r\n            </div>\r\n            <div className=\"profile__item-wrapper\">\r\n                <p className=\"profile__item-title\">Job Description:</p>{\" \"}<p className=\"profile__item\">{ props.lookingForAJobDescription ? props.lookingForAJobDescription : \"No Job Description\" }</p>\r\n            </div>\r\n            <div className=\"profile__contacts\">\r\n                <p className=\"profile__contacts-title\">My Contacts:</p>{\" \"}\r\n                <ul className=\"profile__contacts-ul\">\r\n                    { props.contactsKeysArray.map(contactKey => {\r\n                        return <li key={contactKey}>{contactKey + \": \"} { props.contacts[contactKey] ? <a href={ props.contacts[contactKey] } rel=\"noreferrer nofollow\" target=\"_blank\">{ props.contacts[contactKey] }</a> : \"No \" + contactKey + \" Information\" } </li>\r\n                    }) }\r\n                </ul>\r\n            </div>\r\n            <div className=\"profile__photo\">\r\n                <p>My Photo:</p>\r\n                <img src={props.largePhoto ? props.largePhoto : defaultPhoto} alt=\"user\" className=\"profile__photo-img\" />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SomeoneElseProfilePage;","export const getNotOwnerStatusSelector =  (state) => {\r\n    return state.notOwnerUserData.status;\r\n}\r\n\r\nexport const getNotOwnerFullNameSelector =  (state) => {\r\n    return state.notOwnerUserData.fullName;\r\n}\r\n\r\nexport const getNotOwnerSmallPhotoSelector =  (state) => {\r\n    return state.notOwnerUserData.photos.small;\r\n}\r\n\r\nexport const getNotOwnerLargePhotoSelector =  (state) => {\r\n    return state.notOwnerUserData.photos.large;\r\n}\r\n\r\nexport const getNotOwnerIdSelector =  (state) => {\r\n    return state.notOwnerUserData.id;\r\n}\r\n\r\nexport const getNotOwnerLookingForAJobSelector =  (state) => {\r\n    return state.notOwnerUserData.lookingForAJob;\r\n}\r\n\r\nexport const getNotOwnerLookingForAJobDescriptionSelector =  (state) => {\r\n    return state.notOwnerUserData.lookingForAJobDescription;\r\n}\r\n\r\nexport const getNotOwnerAboutMeSelector =  (state) => {\r\n    return state.notOwnerUserData.aboutMe;\r\n}\r\n\r\nexport const getNotOwnerContactsSelector =  (state) => {\r\n    return state.notOwnerUserData.contacts;\r\n}","import React, { useEffect } from \"react\";\r\nimport SomeoneElseProfilePage from \"./SomeoneElseProfilePage\";\r\nimport { notOwnerUserProfileThunkCreator } from \"../../../BLL/notOwnerUserData/thunkCreators\";\r\nimport { connect } from \"react-redux\";\r\nimport * as selectors from \"../../../BLL/notOwnerUserData/selectors\";\r\nimport { compose } from \"redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nconst SomeoneElseProfilePageContainer = (props) => {\r\n\r\n    useEffect( () => {\r\n        props.notOwnerUserProfileThunkCreator(props.match.params.userId);\r\n    }, [props.match.params.userId] );\r\n\r\n    const contactsKeysArray = Object.keys(props.contacts);\r\n\r\n    return (\r\n        <SomeoneElseProfilePage\r\n            status={props.status}\r\n            fullName={props.fullName}\r\n            smallPhoto={props.smallPhoto}\r\n            largePhoto={props.largePhoto}\r\n            lookingForAJob={props.lookingForAJob}\r\n            lookingForAJobDescription={props.lookingForAJobDescription}\r\n            aboutMe={props.aboutMe}\r\n            contacts={props.contacts}\r\n            contactsKeysArray={contactsKeysArray}\r\n        />\r\n    );\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        status: selectors.getNotOwnerStatusSelector(state),\r\n        fullName: selectors.getNotOwnerFullNameSelector(state),\r\n        smallPhoto: selectors.getNotOwnerSmallPhotoSelector(state),\r\n        largePhoto: selectors.getNotOwnerLargePhotoSelector(state),\r\n        lookingForAJob: selectors.getNotOwnerLookingForAJobSelector(state),\r\n        lookingForAJobDescription: selectors.getNotOwnerLookingForAJobDescriptionSelector(state),\r\n        aboutMe: selectors.getNotOwnerAboutMeSelector(state),\r\n        contacts: selectors.getNotOwnerContactsSelector(state)\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    notOwnerUserProfileThunkCreator\r\n}\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withRouter\r\n)(SomeoneElseProfilePageContainer);\r\n","import React from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { getIsLoggedInSelector } from \"../../BLL/authUserData/selectors\";\r\nimport { setIsModalLoginWindowActive, toogleIsLoginRequirement } from \"../../BLL/loginModalWindow/actionCreators\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isLoggedIn: getIsLoggedInSelector(state),\r\n    }\r\n}\r\n\r\nexport const withAuth = (Component) => {\r\n    const withAuthtContainer = (props) => {\r\n        if (!props.isLoggedIn) {\r\n            props.toogleIsLoginRequirement(true);\r\n            props.setIsModalLoginWindowActive(true);\r\n            return <Redirect to=\"/users\" />\r\n        } else {\r\n            return <Component {...props} />\r\n        }\r\n    }\r\n    return connect(mapStateToProps, { setIsModalLoginWindowActive, toogleIsLoginRequirement })(withAuthtContainer);\r\n}","import React from \"react\";\r\nimport OwnerProfilePage from \"./OwnerProfilePage/OwnerProfilePage\";\r\nimport SomeoneElseProfilePageContainer from \"./SomeoneElseProfilePage/SomeoneElseProfilePageContainer\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { getIsLoggedInSelector, getOwnerIdSelector } from \"../../BLL/authUserData/selectors\";\r\nimport { getNotOwnerIdSelector } from \"../../BLL/notOwnerUserData/selectors\";\r\nimport { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport { withAuth } from \"../../UI/HOC/withAuth\";\r\n\r\nconst ProfilePageContainer = (props) => {\r\n\r\n    props.match.params.userId = Number(props.match.params.userId);\r\n\r\n    if (props.ownerId === props.match.params.userId) {\r\n        return <OwnerProfilePage\r\n            ownerId={props.ownerId}\r\n            userIdFromUrl={props.match.params.userId}          // id из адресной строки\r\n        />\r\n    } else {\r\n        return <SomeoneElseProfilePageContainer\r\n            \r\n        />\r\n    }\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isLoggedIn: getIsLoggedInSelector(state),\r\n        ownerId: getOwnerIdSelector(state),\r\n        notOwnerId: getNotOwnerIdSelector(state)\r\n    }\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, { }),\r\n    withRouter,\r\n    withAuth\r\n)(ProfilePageContainer);"],"sourceRoot":""}