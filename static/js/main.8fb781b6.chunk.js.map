{"version":3,"sources":["BLL/loginModalWindow/actionCreators.js","BLL/authUserData/actionCreators.js","BLL/authUserData/actionTypes.js","BLL/header/actionCreators.js","UI/Header/HeaderLoginButton/HeaderLoginButton.jsx","BLL/header/selectors.js","DAL/login/api.js","BLL/initializedApp/actionTypes.js","BLL/initializedApp/actionCreators.js","UI/Header/HeaderLoginButton/HeaderLoginButtonContainer.jsx","BLL/header/thunkCreators.js","UI/Header/HeaderNav/HeaderNav.jsx","UI/Header/HeaderNav/HeaderNavContainer.jsx","UI/Header/HeaderUserSearch/HeaderUserSearchForm.jsx","UI/Header/HeaderUserSearch/HeaderUserSearchFormContainer.jsx","UI/Header/Header.jsx","UI/Header/HeaderContainer.jsx","BLL/users/selectors.js","BLL/users/actionTypes.js","BLL/users/actionCreators.js","DAL/users/api.js","UI/common/AppPreloader.jsx","UI/UsersPage/UsersPageSingleUser/UsersPageSingleUser.jsx","UI/UsersPage/UsersPage.jsx","UI/UsersPage/UsersPageContainer.jsx","BLL/users/thunkCreators.js","UI/NotFoundPage.jsx","UI/MessagesPage/MessagesPage.jsx","UI/MessagesPage/MessagesPageContainer.jsx","UI/LoginModalWindow/LoginModalWindowForm/LoginModalWindowForm.jsx","BLL/initializedApp/thunkCreators.js","BLL/authUserData/thunkCreators.js","BLL/loginModalWindow/selectors.js","UI/LoginModalWindow/LoginModalWindowForm/LoginModalWindowFormContainer.jsx","BLL/loginModalWindow/thunkCreators.js","UI/LoginModalWindow/LoginModalWindow.jsx","UI/LoginModalWindow/LoginModalWindowContainer.jsx","UI/SideBar/SideBarNav/SideBarNav.jsx","UI/SideBar/SideBarNav/SideBarNavContainer.jsx","UI/SideBar/SideBarUserInfo/SideBarUserInfo.jsx","UI/SideBar/SideBarUserInfo/SideBarUserInfoContainer.jsx","UI/SideBar/SideBar.jsx","UI/SideBar/SideBarContainer.jsx","UI/Footer/Footer.jsx","BLL/initializedApp/selectors.js","App.js","reportWebVitals.js","BLL/loginModalWindow/reducer.js","BLL/authUserData/reducer.js","BLL/header/reducer.js","BLL/initializedApp/reducer.js","BLL/notOwnerUserData/reducer.js","BLL/ownerProfilePage/reducer.js","BLL/users/reducer.js","BLL/redux_store/redux-store.js","index.js","BLL/loginModalWindow/actionTypes.js","UI/common/ButtonPreloader.jsx","DAL/userInfo/api.js","BLL/header/actionTypes.js","BLL/notOwnerUserData/actionTypes.js","UI/common/InputReactHookForm.jsx","BLL/ownerProfilePage/actionTypes.js","assets/img/default_photo.png","BLL/authUserData/selectors.js","BLL/notOwnerUserData/actionCreators.js","BLL/notOwnerUserData/thunkCreators.js"],"names":["setIsModalLoginWindowActive","isModalLoginWindowActive","type","IS_MODAL_LOGIN_WINDOW_ACTIVE","setIsModalLoginWindowButtonClicked","isLoginButtonClicked","IS_MODAL_LOGIN_WINDOW_BUTTON_CLICKED","setCaptchaIntoState","isCapthaActive","captchaURL","SET_CAPTCHA_INTO_STATE","setResponseErrorTextIntoState","responseErrorText","SET_RESPONSE_ERROR_TEXT_INTO_STATE","toogleIsLoginRequirement","boolVariable","TOOGLE_IS_LOGIN_REQUIREMENT","isLoginRequirementActive","setUserData","userId","userLogin","userEmail","isUserLoggedIn","LOGGED_IN_OUT_USER_DATA","id","login","email","isLoggedIn","setUserStatusIntoState","userStatus","SET_USER_STATUS_INTO_STATE","status","setRunUseEffectAppComponent","booleanVar","RUN_USE_EFFECT_APP_COMPONENT","runUseEffectAppComponent","setUserInfoIntoState","userInfo","SET_USER_INFO_INTO_STATE","aboutMe","lookingForAJob","lookingForAJobDescription","fullName","photoSmall","photos","small","photoLarge","large","facebook","contacts","github","instagram","mainLink","twitter","vk","website","youtube","setUserPhotosIntoState","SET_USER_PHOTOS_INTO_STATE","toogleLoockingForAJobInState","isLookingForAJob","TOOGLE_LOOKING_FOR_A_JOB","setIsHeaderLoginButtonClicked","IS_HEADER_LOGIN_BUTTON_CLICKED","setIsHeaderSearchButtonClicked","isSearchButtonClicked","IS_HEADER_SEARCH_BUTTON_CLICKED","HeaderLoginButton","props","className","cn","isHeaderLoginButtonClicked","onClick","logOutButtonClicked","toogleIsModalLoginWindowAcive","ButtonPreloader","displayNone","dotsCount","classes","getIsHeaderLoginButtonClickedSelector","state","header","getIsSearchButtonClickedSelector","axiosInstance","axios","withCredentials","baseURL","headers","loginAPI","password","rememberMe","captcha","post","then","response","data","delete","get","url","INITIALIZED_APP","initializedApp","isAppInitialized","connect","getIsLoggedInSelector","logOutThunkCreator","dispatch","a","resultCode","alert","isModalLoginWindowAcive","HeaderNav","to","ownerId","getOwnerIdSelector","HeaderUserSearchForm","onSubmit","handleSubmit","name","ref","register","validate","isValueInteger","value","Number","isInteger","isValuePositive","placeholder","errors","mapDispatchToProps","notOwnerUserProfileThunkCreator","useForm","history","useHistory","formData","push","Header","src","alt","HeaderContainer","getUsersArraySelector","users","items","getTotalUsersCountSelector","totalCount","getUsersCurrentPageSelector","currentPage","getIsPreloaderActiveSelector","isPreloaderActive","getIdClickedFollowButtonsArray","clickedButtonsIds","getRunUseEffect","runUseEffectInUsersPageContainer","getIsFirstUsersLoaded","isFirstUsersLoaded","getIsButtonLoadMoreUsersClicked","isButtonLoadMoreUsersClicked","getCountOfShownUsers","countOfShownUsers","getNumberInFirstPaginationSquare","numberInFirstPaginationSquare","getNumberInLastPaginationSquare","numberInLastPaginationSquare","SET_USERS_ARRAY_TOTAL_COUNT_ERROR_INTO_STATE","SET_CURRENT_PAGE_INTO_STATE","TOOGLE_FOLLOW_USER","IS_PRELOADER_ACTIVE_INTO_STATE","SET_FOLLOW_BUTTON_CLICKED_ID_INTO_STATE","UN_SET_FOLLOW_BUTTON_CLICKED_ID_INTO_STATE","TOOGLE_RUN_USE_EFFECT","TOOGLE_IS_FIRST_USERS_LOADED","IS_BUTTON_LOAD_MORE_USERS_CLICKED","SET_NUMBERS_IN_FIRST_LAST_PAGINATION_SQUARES","setUsersArray","usersArray","error","setCurrentPage","setIsPreloaderActive","isActive","followUser","isFollow","toogleRunUseEffect","booleanVariable","setClickedButtonId","unSetClickedButtonId","isClicked","usersAPI","usersPerPage","AppPreloader","UsersPageSingleUser","singleUser","defaultPhoto","clickedFollowButtonsArray","some","element","followUnfollowUser","followed","UsersPage","currentPageForPagination","e","changePaginationPages","paginationSquares","maxCountOfPaginationSquares","currentTarget","innerHTML","map","loadNextPartOfUsers","getUsersThunkCreator","turnOnTheButtonPreloader","followUserThunkCreator","toogleIsFirstUsersLoaded","setNumbersInFirstLastPaginationSquares","firstNumber","lastNumber","totalUsersCountInServer","runUseEffect","Math","ceil","useState","changeCurrentPageForPagination","loadNewUsersAfterPaginationSquareClick","page","numberOfClickedSquare","useEffect","i","nextPage","NotFoundPage","MessagesPage","MessagesPageContainer","LoginModalWindowForm","InputReactHookForm","CSSclasses","minLength","required","onChangeOwnFunction","deleteErrorMessage","responseErrorTextFromServer","initializedAppThunkCreator","authThunkCreatorResult","userData","userInfoAPI","getUserStatus","getUserInfo","Promise","all","getIsModalLoginWindowActiveSelector","loginModalWindow","getIsLoginButtonClickedSelector","getIsCaptchActiveSelector","getCaptchaURLSelector","getResponseErrorTextSelector","getIsLoginRequirementSelector","logInThunkCreator","messages","LoginModalWindow","toogleIsModalLoginWindowActive","IsModalLoginWindowActive","SideBarNav","SideBarUserInfo","ownerSmallPhoto","ownerFullName","ownerStatus","getOwnerStatusSelector","getOwnerFullNameSelector","getOwnerSmallPhotoSelector","SideBar","SideBarContainer","Footer","href","getIsAppInitializedSelector","ProfilePageContainer","React","lazy","getRunUseEffectAppComponent","exact","path","render","Suspense","fallback","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","loginModalWindowReducer","action","superState","authUserDataReducer","headerReducer","initializedAppReducer","notOwnerUserDataReducer","isSaveChangesButtonClicked","isUpdatePhotoButtonClicked","ownerProfilePageReducer","IS_OWNER_PROFILE_PAGE_SAVE_CHANGES_BUTTON_CLICKED","IS_OWNER_PROFILE_PAGE_UPDATE_PHOTO_BUTTON_CLICKED","uniqueUrlName","usersReducers","item","filter","reducers","combineReducers","authUserData","notOwnerUserData","ownerProfilePage","form","formReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleWare","ReactDOM","basename","process","document","getElementById","preloaderDots","updateOwnerStatus","put","updateOwnerInfo","ownerInfoObj","updateOwnerPhoto","photo","FormData","append","onChange","getOwnerLargePhotoSelector","getOwnerLookingForAJobSelector","getOwnerLookingForAJobDescriptionSelector","getOwnerAboutMeSelector","getOwnerContactsSelector","setNotOwnerUserInfoIntoState"],"mappings":"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","file":"static/js/main.8fb781b6.chunk.js","sourcesContent":["import {\r\n    IS_MODAL_LOGIN_WINDOW_ACTIVE, IS_MODAL_LOGIN_WINDOW_BUTTON_CLICKED,\r\n    SET_CAPTCHA_INTO_STATE, SET_RESPONSE_ERROR_TEXT_INTO_STATE,\r\n    TOOGLE_IS_LOGIN_REQUIREMENT\r\n} from \"./actionTypes\";\r\n\r\nexport const setIsModalLoginWindowActive = (isModalLoginWindowActive) => ({ type: IS_MODAL_LOGIN_WINDOW_ACTIVE, isModalLoginWindowActive });\r\nexport const setIsModalLoginWindowButtonClicked = (isLoginButtonClicked) => ({ type: IS_MODAL_LOGIN_WINDOW_BUTTON_CLICKED, isLoginButtonClicked });\r\nexport const setCaptchaIntoState = (isCapthaActive, captchaURL) => ({ type: SET_CAPTCHA_INTO_STATE, isCapthaActive, captchaURL });\r\nexport const setResponseErrorTextIntoState = (responseErrorText) => ({ type: SET_RESPONSE_ERROR_TEXT_INTO_STATE, responseErrorText });\r\nexport const toogleIsLoginRequirement = (boolVariable) => ({ type: TOOGLE_IS_LOGIN_REQUIREMENT, isLoginRequirementActive: boolVariable });","import {\r\n    LOGGED_IN_OUT_USER_DATA, SET_USER_STATUS_INTO_STATE,\r\n    SET_USER_INFO_INTO_STATE, SET_USER_PHOTOS_INTO_STATE,\r\n    TOOGLE_LOOKING_FOR_A_JOB, RUN_USE_EFFECT_APP_COMPONENT\r\n} from \"./actionTypes\";\r\n\r\nexport const setUserData = ({ userId, userLogin, userEmail, isUserLoggedIn }) => {\r\n    return {\r\n        type: LOGGED_IN_OUT_USER_DATA,\r\n        id: userId,\r\n        login: userLogin,\r\n        email: userEmail,\r\n        isLoggedIn: isUserLoggedIn\r\n    }\r\n};\r\n\r\nexport const setUserStatusIntoState = (userStatus) => ({ type: SET_USER_STATUS_INTO_STATE, status: userStatus });\r\n\r\nexport const setRunUseEffectAppComponent = (booleanVar) => ({ type: RUN_USE_EFFECT_APP_COMPONENT, runUseEffectAppComponent: booleanVar });\r\n\r\nexport const setUserInfoIntoState = (userInfo) => {\r\n    return {\r\n        type: SET_USER_INFO_INTO_STATE,\r\n        aboutMe: userInfo.aboutMe,\r\n        lookingForAJob: userInfo.lookingForAJob,\r\n        lookingForAJobDescription: userInfo.lookingForAJobDescription,\r\n        fullName: userInfo.fullName,\r\n        photoSmall: userInfo.photos.small,\r\n        photoLarge: userInfo.photos.large,\r\n        facebook: userInfo.contacts.facebook,\r\n        github: userInfo.contacts.github,\r\n        instagram: userInfo.contacts.instagram,\r\n        mainLink: userInfo.contacts.mainLink,\r\n        twitter: userInfo.contacts.twitter,\r\n        vk: userInfo.contacts.vk,\r\n        website: userInfo.contacts.website,\r\n        youtube: userInfo.contacts.youtube\r\n    }\r\n}\r\n\r\nexport const setUserPhotosIntoState = (photos) => {\r\n    return {\r\n        type: SET_USER_PHOTOS_INTO_STATE,\r\n        photoSmall: photos.small,\r\n        photoLarge: photos.large\r\n    }\r\n}\r\n\r\nexport const toogleLoockingForAJobInState = (isLookingForAJob) => {\r\n    return {\r\n        type: TOOGLE_LOOKING_FOR_A_JOB,\r\n        lookingForAJob: isLookingForAJob\r\n    }\r\n}","export const LOGGED_IN_OUT_USER_DATA = 'socialNetwork/authUserData/LOGGED_IN_OUT_USER_DATA';\r\nexport const SET_USER_STATUS_INTO_STATE = 'socialNetwork/authUserData/SET_USER_STATUS_INTO_STATE';\r\nexport const SET_USER_INFO_INTO_STATE = 'socialNetwork/authUserData/SET_USER_INFO_INTO_STATE';\r\nexport const SET_USER_PHOTOS_INTO_STATE = 'socialNetwork/authUserData/SET_USER_PHOTOS_INTO_STATE';\r\nexport const TOOGLE_LOOKING_FOR_A_JOB = 'socialNetwork/authUserData/TOOGLE_LOOKING_FOR_A_JOB';\r\nexport const RUN_USE_EFFECT_APP_COMPONENT = 'socialNetwork/authUserData/RUN_USE_EFFECT_APP_COMPONENT';","import { IS_HEADER_LOGIN_BUTTON_CLICKED, IS_HEADER_SEARCH_BUTTON_CLICKED } from \"./actionTypes\";\r\n\r\nexport const setIsHeaderLoginButtonClicked = (isLoginButtonClicked) => ({ type: IS_HEADER_LOGIN_BUTTON_CLICKED, isLoginButtonClicked });\r\nexport const setIsHeaderSearchButtonClicked = (isSearchButtonClicked) => ({ type: IS_HEADER_SEARCH_BUTTON_CLICKED, isSearchButtonClicked });","import React from \"react\";\r\nimport cn from \"classnames\";\r\nimport ButtonPreloader from \"../../common/ButtonPreloader\";\r\n\r\nconst HeaderLoginButton = (props) => {\r\n    return (\r\n        <>\r\n            {\r\n                props.isLoggedIn\r\n                ? <button className={cn(\"button\", { 'displaynone': props.isHeaderLoginButtonClicked })} onClick={ () => props.logOutButtonClicked() }>              {/* если залогинен покажем кнопку Log Out с соответствующим функционалом */} \r\n                    Log Out\r\n                </button>\r\n                :\r\n                <button onClick={() => props.toogleIsModalLoginWindowAcive(true)} className={ cn(\"button\", { 'displaynone': props.isHeaderLoginButtonClicked } ) }>        {/* если не залогинен покажем кнопку Log In с соответствующим функционалом */} \r\n                    Log In\r\n                </button>\r\n            }\r\n            <ButtonPreloader displayNone={!props.isHeaderLoginButtonClicked} dotsCount={3} classes={[\"loader\", \"loader_header-loginbutton\"]} />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default HeaderLoginButton;","export const getIsHeaderLoginButtonClickedSelector =  (state) => {\r\n    return state.header.isLoginButtonClicked;\r\n}\r\n\r\nexport const getIsSearchButtonClickedSelector =  (state) => {\r\n    return state.header.isSearchButtonClicked;\r\n}","import * as axios from \"axios\";\r\n\r\nconst axiosInstance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: \"https://social-network.samuraijs.com/api/1.0/\",\r\n    headers: {\r\n        \"API-KEY\": \"9aff8b45-5e6b-4151-bfce-c962b4066e73\"\r\n    }\r\n});\r\n\r\nexport const loginAPI = {\r\n    logIn(email, password, rememberMe = false, captcha = false) {\r\n        return axiosInstance.post(`auth/login`, { email: email, password: password, rememberMe: rememberMe, captcha: captcha })\r\n            .then(response => {\r\n                return response.data;\r\n            });\r\n    },\r\n\r\n    logOut() {\r\n        return axiosInstance.delete(`auth/login`)\r\n            .then(response => {\r\n                return response.data;\r\n            });\r\n    },\r\n\r\n    getCaptcha() {\r\n        return axiosInstance.get(\"security/get-captcha-url\")\r\n            .then(response => {\r\n                return response.data.url;\r\n            });\r\n    },\r\n\r\n    isAuth() {                              // залогинен ли пользователь\r\n        return axiosInstance.get(\"auth/me\")\r\n            .then(response => {\r\n                return response.data;\r\n            });\r\n    }\r\n}","export const INITIALIZED_APP = 'socialNetwork/initializedApp/INITIALIZED_APP';","import { INITIALIZED_APP } from \"./actionTypes\";\r\n\r\nexport const initializedApp = (isAppInitialized) => ({type: INITIALIZED_APP, isAppInitialized});","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport HeaderLoginButton from \"./HeaderLoginButton\";\r\nimport { getIsLoggedInSelector } from \"../../../BLL/authUserData/selectors\";\r\nimport { getIsHeaderLoginButtonClickedSelector } from \"../../../BLL/header/selectors\";\r\nimport { setIsModalLoginWindowActive } from \"../../../BLL/loginModalWindow/actionCreators\";\r\nimport { setIsHeaderLoginButtonClicked } from \"../../../BLL/header/actionCreators\";\r\nimport { setRunUseEffectAppComponent } from \"../../../BLL/authUserData/actionCreators\";\r\nimport { logOutThunkCreator } from \"../../../BLL/header/thunkCreators\";\r\n\r\nconst HeaderLoginButtonContainer = (props) => {\r\n\r\n    function toogleIsModalLoginWindowAcive(isModalLoginWindowAcive) {       // функция для изменение в стейте состояния показывать ли модальное окно логина\r\n        props.setIsModalLoginWindowActive(isModalLoginWindowAcive);\r\n        props.setIsHeaderLoginButtonClicked(isModalLoginWindowAcive);\r\n    }\r\n\r\n    function logOutButtonClicked() {       // функция для запуска санки логаута\r\n        props.setRunUseEffectAppComponent(true);\r\n        props.logOutThunkCreator();\r\n    }\r\n\r\n    return (\r\n        <HeaderLoginButton\r\n            toogleIsModalLoginWindowAcive={toogleIsModalLoginWindowAcive}\r\n            isLoggedIn={props.isLoggedIn}\r\n            isHeaderLoginButtonClicked={props.isHeaderLoginButtonClicked}\r\n            logOutButtonClicked={logOutButtonClicked}\r\n        />\r\n    );\r\n}\r\n\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isLoggedIn: getIsLoggedInSelector(state),\r\n        isHeaderLoginButtonClicked: getIsHeaderLoginButtonClickedSelector(state)\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n    setIsModalLoginWindowActive, setIsHeaderLoginButtonClicked,\r\n    logOutThunkCreator, setRunUseEffectAppComponent\r\n})(HeaderLoginButtonContainer);","import { setIsHeaderLoginButtonClicked } from \"./actionCreators\";\r\nimport { loginAPI } from \"./../../DAL/login/api\";\r\nimport { setUserData, setUserInfoIntoState, setUserStatusIntoState } from \"../authUserData/actionCreators\";\r\nimport { initializedApp } from \"../initializedApp/actionCreators\";\r\n\r\nexport const logOutThunkCreator = (/* email, password, rememberMe = false, captcha = false */) => async (dispatch) => {\r\n    dispatch(setIsHeaderLoginButtonClicked(true));\r\n    \r\n    dispatch(initializedApp(false));\r\n\r\n    const data = await loginAPI.logOut();\r\n\r\n    if (data.resultCode === 0) {            // если пользователь вылогинелся\r\n        dispatch(setUserData({ userId: null, userLogin: \"\", userEmail: \"\", isUserLoggedIn: false }));\r\n        dispatch(setUserStatusIntoState(null));\r\n        dispatch(setUserInfoIntoState({\r\n            aboutMe: null,\r\n            lookingForAJob: null,\r\n            lookingForAJobDescription: null,\r\n            fullName: null,\r\n            photos: {\r\n                small: null,\r\n                large: null\r\n            },\r\n            contacts: {\r\n                facebook: null,\r\n                github: null,\r\n                instagram: null,\r\n                mainLink: null,\r\n                twitter: null,\r\n                vk: null,\r\n                website: null,\r\n                youtube: null\r\n            }\r\n        }));\r\n        dispatch(setIsHeaderLoginButtonClicked(false));\r\n    } else {\r\n        alert(\"Some Error\");\r\n        dispatch(setIsHeaderLoginButtonClicked(false));\r\n    }\r\n}","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst HeaderNav = (props) => {\r\n    return (\r\n        <nav className=\"header__nav\">\r\n            <ul className=\"header__ul\">\r\n                <li className=\"header__li\">\r\n                    <NavLink to=\"/users\" className=\"header__anchor\">People Nearby</NavLink>\r\n                </li>\r\n                <li className=\"header__li\">\r\n                    { props.isLoggedIn\r\n                        ? <NavLink to={`/profile/${props.ownerId}`} className=\"header__anchor\">My Profile</NavLink>\r\n                        : <NavLink to={`/profile/2`} className=\"header__anchor\">My Profile</NavLink>\r\n                    }\r\n                </li>\r\n                <li className=\"header__li\">\r\n                    <NavLink to=\"/messages\" className=\"header__anchor\">Messages</NavLink>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default HeaderNav;","import React from \"react\";\r\nimport HeaderNav from \"./HeaderNav\";\r\nimport { getOwnerIdSelector, getIsLoggedInSelector } from \"../../../BLL/authUserData/selectors\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst HeaderNavContainer = (props) => {\r\n    return <HeaderNav\r\n        isLoggedIn={props.isLoggedIn}\r\n        ownerId={props.ownerId}\r\n    />\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isLoggedIn: getIsLoggedInSelector(state),\r\n        ownerId: getOwnerIdSelector(state)\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HeaderNavContainer);","import React from \"react\";\r\nimport ButtonPreloader from \"../../common/ButtonPreloader\";\r\nimport cn from \"classnames\";\r\n\r\nconst HeaderUserSearchForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit(props.onSubmit)} className=\"header__search\">\r\n            <input\r\n                name=\"id\"\r\n                ref={ props.register( {\r\n                    validate: {\r\n                        isValueInteger: value => Number.isInteger(Number(value)),\r\n                        isValuePositive: value => Number(value) > 0\r\n                      }\r\n                    } ) }\r\n                type=\"text\"\r\n                className=\"header__search-field\"\r\n                placeholder=\"Search friend by id\" />\r\n\r\n            { props.errors\r\n                && props.errors.type === \"isValueInteger\"\r\n                && <p className=\"animate__animated animate__lightSpeedInRight error__message error_header-searchform\">Value must be Integer</p>\r\n            }\r\n\r\n            { props.errors\r\n                && props.errors.type === \"isValuePositive\"\r\n                && <p className=\"animate__animated animate__lightSpeedInRight error__message error_header-searchform\">Value must be Positive</p>\r\n            }\r\n\r\n            <button className={cn(\"button\", \"button_header-search\", {\"displaynone\": props.isSearchButtonClicked})}>Search</button>\r\n\r\n            <ButtonPreloader displayNone={!props.isSearchButtonClicked} dotsCount={3} classes={[\"loader\", \"loader_header-searchByIdButton\"]} />\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default HeaderUserSearchForm;","import React from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport HeaderUserSearchForm from \"./HeaderUserSearchForm\";\r\nimport { notOwnerUserProfileThunkCreator } from \"../../../BLL/notOwnerUserData/thunkCreators\";\r\nimport { getIsSearchButtonClickedSelector } from \"../../../BLL/header/selectors\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst HeaderUserSearchFormContainer = (props) => {\r\n    const { register, handleSubmit, errors } = useForm();\r\n    const history = useHistory();                           // добавляет новый УРЛ и компонент перересовывается правильно\r\n\r\n    const onSubmit = (formData) => {        // в formData все данные из заполненой формы\r\n        formData.id = Number(formData.id)\r\n        // действия с заполненными данными, например санки\r\n        // console.log(formData.id);\r\n        history.push(\"/profile/\" + formData.id);              // добавляет новый УРЛ и компонент перересовывается правильно, роутер автоматом перекидывает на страницк найденного пользователя\r\n    }\r\n\r\n    return <HeaderUserSearchForm\r\n        register={register}\r\n        handleSubmit={handleSubmit}\r\n        errors={errors.id}\r\n        onSubmit={onSubmit}\r\n        isSearchButtonClicked={props.isSearchButtonClicked}\r\n    />\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isSearchButtonClicked: getIsSearchButtonClickedSelector(state)\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    notOwnerUserProfileThunkCreator\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HeaderUserSearchFormContainer);","import React from \"react\";\r\nimport HeaderLoginButtonContainer from \"./HeaderLoginButton/HeaderLoginButtonContainer\";\r\nimport HeaderNavContainer from \"./HeaderNav/HeaderNavContainer\";\r\nimport HeaderUserSearchFormContainer from \"./HeaderUserSearch/HeaderUserSearchFormContainer\";\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <header className=\"header\">\r\n            <div className=\"container\">\r\n                <div className=\"header__flex-wrapper\">\r\n\r\n                    <div className=\"header__logo-and-title\">\r\n                        <img src=\"#\" alt=\"logo\" className=\"header__logo\" />\r\n                        <h2 className=\"header__title\">JS Friend Finder</h2>\r\n                    </div>\r\n\r\n                    <HeaderUserSearchFormContainer />\r\n\r\n                    <HeaderNavContainer />\r\n\r\n                    <HeaderLoginButtonContainer />\r\n\r\n                </div>\r\n            </div>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","import React from \"react\";\r\nimport Header from \"./Header\";\r\n\r\nconst HeaderContainer = () => {\r\n    return (\r\n        <Header />\r\n    );\r\n}\r\n\r\nexport default HeaderContainer;","export const getUsersArraySelector =  (state) => {\r\n    return state.users.items;\r\n}\r\n\r\nexport const getTotalUsersCountSelector =  (state) => {\r\n    return state.users.totalCount;\r\n}\r\n\r\nexport const getUsersErrorSelector =  (state) => {\r\n    return state.users.error;\r\n}\r\n\r\nexport const getUsersCurrentPageSelector =  (state) => {\r\n    return state.users.currentPage;\r\n}\r\n\r\nexport const getIsPreloaderActiveSelector =  (state) => {\r\n    return state.users.isPreloaderActive;\r\n}\r\n\r\nexport const getIdClickedFollowButtonsArray =  (state) => {\r\n    return state.users.clickedButtonsIds;\r\n}\r\n\r\nexport const getRunUseEffect =  (state) => {\r\n    return state.users.runUseEffectInUsersPageContainer;\r\n}\r\n\r\nexport const getIsFirstUsersLoaded =  (state) => {\r\n    return state.users.isFirstUsersLoaded;\r\n}\r\n\r\nexport const getIsButtonLoadMoreUsersClicked =  (state) => {\r\n    return state.users.isButtonLoadMoreUsersClicked;\r\n}\r\n\r\nexport const getCountOfShownUsers =  (state) => {\r\n    return state.users.countOfShownUsers;\r\n}\r\n\r\nexport const getNumberInFirstPaginationSquare =  (state) => {\r\n    return state.users.numberInFirstPaginationSquare;\r\n}\r\n\r\nexport const getNumberInLastPaginationSquare =  (state) => {\r\n    return state.users.numberInLastPaginationSquare;\r\n}","export const SET_USERS_ARRAY_TOTAL_COUNT_ERROR_INTO_STATE = 'socialNetwork/users/SET_USERS_ARRAY_TOTAL_COUNT_ERROR_AFTER_CLICK_SHOW_MORE_USERS_INTO_STATE';         // эта константа будет использовать в свитч кейсе редюсера когда юзер нажмет кнопку внизу страницы \"Show More Users\", чтобы в случае необходимости дозаписать в массив новых юзеров\r\nexport const SET_CURRENT_PAGE_INTO_STATE = 'socialNetwork/users/SET_CURRENT_PAGE_INTO_STATE';\r\nexport const TOOGLE_FOLLOW_USER = 'socialNetwork/users/TOOGLE_FOLLOW_USER';\r\nexport const IS_PRELOADER_ACTIVE_INTO_STATE = 'socialNetwork/users/IS_PRELOADER_ACTIVE_INTO_STATE';\r\nexport const SET_FOLLOW_BUTTON_CLICKED_ID_INTO_STATE = 'socialNetwork/users/SET_FOLLOW_BUTTON_CLICKED_ID_INTO_STATE';        // чтобы показывать лоадер вместо кнопки\r\nexport const UN_SET_FOLLOW_BUTTON_CLICKED_ID_INTO_STATE = 'socialNetwork/users/UN_SET_FOLLOW_BUTTON_CLICKED_ID_INTO_STATE';  // чтобы показывать кнопку вместо лоадера\r\nexport const TOOGLE_RUN_USE_EFFECT = 'socialNetwork/users/TOOGLE_RUN_USE_EFFECT';\r\nexport const TOOGLE_IS_FIRST_USERS_LOADED = 'socialNetwork/users/TOOGLE_IS_FIRST_USERS_LOADED';     //   заменять или добавлять к массиву юзеров новых юзеров, если кликнули \"Show More Users\" тогда будем добавлять, если кликнули квалдратик пагинации или первый раз загружаем страницу юзеров будем заменять\r\nexport const IS_BUTTON_LOAD_MORE_USERS_CLICKED = 'socialNetwork/users/IS_BUTTON_LOAD_MORE_USERS_CLICKED';\r\nexport const SET_NUMBERS_IN_FIRST_LAST_PAGINATION_SQUARES = 'socialNetwork/users/SET_NUMBERS_IN_FIRST_LAST_PAGINATION_SQUARES';","import {\r\n    SET_USERS_ARRAY_TOTAL_COUNT_ERROR_INTO_STATE, SET_CURRENT_PAGE_INTO_STATE,\r\n    IS_PRELOADER_ACTIVE_INTO_STATE, TOOGLE_FOLLOW_USER,\r\n    SET_FOLLOW_BUTTON_CLICKED_ID_INTO_STATE, UN_SET_FOLLOW_BUTTON_CLICKED_ID_INTO_STATE,\r\n    TOOGLE_RUN_USE_EFFECT, IS_BUTTON_LOAD_MORE_USERS_CLICKED, TOOGLE_IS_FIRST_USERS_LOADED,\r\n    SET_NUMBERS_IN_FIRST_LAST_PAGINATION_SQUARES\r\n} from \"./actionTypes\";\r\n\r\nexport const setUsersArray = (usersArray, totalCount, error) => {\r\n    return {\r\n        type: SET_USERS_ARRAY_TOTAL_COUNT_ERROR_INTO_STATE,\r\n        usersArray: [...usersArray],\r\n        totalCount: totalCount,\r\n        error: error,\r\n    }\r\n};\r\n\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE_INTO_STATE, currentPage});\r\n\r\nexport const setIsPreloaderActive = (isActive) => ({type: IS_PRELOADER_ACTIVE_INTO_STATE, isActive});\r\n\r\nexport const followUser = (userId, isFollow) => ({type: TOOGLE_FOLLOW_USER, userId, isFollow});\r\n\r\nexport const toogleRunUseEffect = (booleanVariable) => ({type: TOOGLE_RUN_USE_EFFECT, booleanVariable});\r\n\r\nexport const toogleIsFirstUsersLoaded = (booleanVariable) => ({type: TOOGLE_IS_FIRST_USERS_LOADED, booleanVariable});\r\n\r\nexport const setClickedButtonId = (userId) => ({type: SET_FOLLOW_BUTTON_CLICKED_ID_INTO_STATE, userId});        // чтобы показывать лоадер вместо кнопки\r\n\r\nexport const unSetClickedButtonId = (userId) => ({type: UN_SET_FOLLOW_BUTTON_CLICKED_ID_INTO_STATE, userId});   // чтобы показывать кнопку вместо лоадера\r\n\r\nexport const isButtonLoadMoreUsersClicked = (isClicked) => ({type: IS_BUTTON_LOAD_MORE_USERS_CLICKED, isClicked});   // чтобы загрузку вместо кликнтуой кнопки и наоборот\r\n\r\nexport const setNumbersInFirstLastPaginationSquares = (firstNumber, lastNumber) => ({type: SET_NUMBERS_IN_FIRST_LAST_PAGINATION_SQUARES, numberInFirstPaginationSquare: firstNumber, numberInLastPaginationSquare: lastNumber});","import * as axios from \"axios\";\r\n\r\nconst axiosInstance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: \"https://social-network.samuraijs.com/api/1.0/\",\r\n    headers: {\r\n        \"API-KEY\": \"9aff8b45-5e6b-4151-bfce-c962b4066e73\"\r\n    }\r\n});\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage = 1, usersPerPage = 10) {\r\n        return axiosInstance.get(`users?page=${currentPage}&count=${usersPerPage}`)\r\n            .then(response => {\r\n                return response.data;\r\n            });\r\n    },\r\n\r\n    unFollowUser(id) {\r\n        return axiosInstance.delete(`follow/${id}`)\r\n            .then(response => {\r\n                return response.data;\r\n            });\r\n    },\r\n\r\n    followUser(id) {\r\n        return axiosInstance.post(`follow/${id}`, {})\r\n            .then(response => {\r\n                return response.data;\r\n            });\r\n    }\r\n};","import React from \"react\";\r\n\r\nconst AppPreloader = () => {\r\n    return (\r\n        <div className=\"cssload-thecube\">\r\n            <div className=\"cssload-cube cssload-c1\"></div>\r\n            <div className=\"cssload-cube cssload-c2\"></div>\r\n            <div className=\"cssload-cube cssload-c4\"></div>\r\n            <div className=\"cssload-cube cssload-c3\"></div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AppPreloader;","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport defaultPhoto from \"../../../assets/img/default_photo.png\";\r\nimport ButtonPreloader from \"../../../UI/common/ButtonPreloader\";\r\nimport cn from \"classnames\";\r\n\r\nconst UsersPageSingleUser = (props) => {\r\n    return (\r\n        <div className=\"users__single-user\">\r\n            <div className=\"users__user-photo\">\r\n                <img src={ props.singleUser.photos.small ? props.singleUser.photos.small : defaultPhoto } alt=\"User\" className=\"users__user-photo-img\" />\r\n            </div>\r\n            <div className=\"users__user-info\">\r\n                <h2 className=\"users__user-name\"><NavLink to={props.singleUser.id ? `/profile/${props.singleUser.id}` : \"#\" }>{props.singleUser.name}</NavLink></h2>\r\n                <p className=\"users__user-status\">Status: { props.singleUser.status ? props.singleUser.status : \"I Have No Status\" }</p>\r\n                {/* <p className=\"users__user-is-looking-job\">Я ищу работу</p>\r\n                <p className=\"users__user-looking-job-description\">Описание работы:</p> */}\r\n            </div>\r\n            <div className=\"users__add-friend-button\">\r\n                {\r\n                    props.isLoggedIn\r\n                    ? <button className={cn(\"button\", \"button_add-friend\", {\"displaynone\": props.clickedFollowButtonsArray.some((element) => element === props.singleUser.id)})} onClick={() => props.followUnfollowUser(props.singleUser.id, !props.singleUser.followed)}>{ props.singleUser.followed ? \"Un Follow User\" : \"Follow User\" }</button>\r\n                    : null\r\n                }\r\n                \r\n                <ButtonPreloader displayNone={!props.clickedFollowButtonsArray.some((element) => element === props.singleUser.id)} dotsCount={3} classes={[\"loader\", \"loader_header-loginbutton\"]} />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default UsersPageSingleUser;","import React from \"react\";\r\nimport AppPreloader from \"../common/AppPreloader\";\r\nimport UsersPageSingleUser from \"./UsersPageSingleUser/UsersPageSingleUser\";\r\nimport cn from \"classnames\";\r\nimport ButtonPreloader from \"../common/ButtonPreloader\";\r\n\r\nconst UsersPage = (props) => {\r\n    return (\r\n        <div className=\"grid-wrapper__content users\">\r\n            { props.isPreloaderActive\r\n                ? <AppPreloader />\r\n                : <>\r\n                    <div className=\"users__pagination-wrapper\">\r\n                        <div className=\"users__pagination\">\r\n                            {props.currentPageForPagination === 1           // если текущая страница === 1 не отобразим стрелку влево\r\n                                ? null\r\n                                : <span\r\n                                    className=\"users__pagination-single-span\"\r\n                                    onClick={(e) => props.changePaginationPages((props.currentPageForPagination - 1))}>&larr;     {/* после нажатия на стрелку влево вычислим какая текущая страница должна быть */}\r\n                                </span>\r\n                            }\r\n\r\n                            {props.paginationSquares}\r\n\r\n                            {props.currentPageForPagination === props.maxCountOfPaginationSquares         // если текущая страница === последняя страница не отобразим троеточие, стрелку вправо и последнюю стрницу после троеточия\r\n                                ? null\r\n                                : <>\r\n                                    <span className=\"users__pagination-single-span\">...</span>\r\n                                    <span\r\n                                        className=\"users__pagination-single-span\"\r\n                                        onClick={(e) => props.changePaginationPages((e.currentTarget.innerHTML))}>{props.maxCountOfPaginationSquares}\r\n                                    </span>\r\n                                    <span\r\n                                        className=\"users__pagination-single-span\"\r\n                                        onClick={(e) => props.changePaginationPages((props.currentPageForPagination + 1))}>&rarr;     {/* после нажатия на стрелку вправо вычислим какая текущая страница должна быть */}\r\n                                    </span>\r\n                                </>\r\n                            }\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"users__users\">\r\n\r\n                        {\r\n                            props.usersArray.map(singleUser => {\r\n                                return (\r\n                                    <UsersPageSingleUser\r\n                                        key={singleUser.id}\r\n                                        singleUser={singleUser}\r\n                                        followUnfollowUser={props.followUnfollowUser}\r\n                                        isLoggedIn={props.isLoggedIn}\r\n                                        clickedFollowButtonsArray={props.clickedFollowButtonsArray}\r\n                                    />\r\n                                );\r\n                            })\r\n                        }\r\n\r\n                        <div className=\"button__show-more-users-wrapper\">\r\n                            <button className={cn(\"button\", \"button_show-more-users\", { \"displaynone\": props.isButtonLoadMoreUsersClicked })} onClick={() => props.loadNextPartOfUsers(props.currentPage + 1)}>Show More</button>\r\n                            <ButtonPreloader displayNone={!props.isButtonLoadMoreUsersClicked} dotsCount={10} classes={[\"loader\", \"button_show-more-users\"]} />\r\n                        </div>\r\n                    </div>\r\n                </>\r\n\r\n            }\r\n\r\n\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default UsersPage;","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n    getUsersArraySelector, getTotalUsersCountSelector,\r\n    getUsersCurrentPageSelector, getIsPreloaderActiveSelector,\r\n    getIdClickedFollowButtonsArray, getRunUseEffect, getIsFirstUsersLoaded,\r\n    getIsButtonLoadMoreUsersClicked, getCountOfShownUsers,\r\n    getNumberInFirstPaginationSquare, getNumberInLastPaginationSquare\r\n} from \"../../BLL/users/selectors\";\r\nimport { getIsLoggedInSelector } from \"../../BLL/authUserData/selectors\";\r\nimport {\r\n    setCurrentPage, toogleRunUseEffect,\r\n    toogleIsFirstUsersLoaded, setNumbersInFirstLastPaginationSquares\r\n} from \"../../BLL/users/actionCreators\";\r\nimport { getUsersThunkCreator, followUserThunkCreator } from \"../../BLL/users/thunkCreators\";\r\nimport UsersPage from \"./UsersPage\";\r\nimport cn from \"classnames\";\r\n\r\nconst UsersPageContainer = (props) => {\r\n\r\n    const maxCountOfPaginationSquares = Math.ceil(props.totalUsersCountInServer / props.countOfShownUsers);       // цифра которая будет в последнем квадратике пагинации (после троеточия), то есть макисмально возможная показываемая страница\r\n\r\n    let [currentPageForPagination, changeCurrentPageForPagination] = useState(props.currentPage);   // активная страница для пагинации цифрами вверзу страницы юзеров\r\n\r\n    useEffect(() => {\r\n        if (props.runUseEffect) {                               // если пришли с прошлой странице при первом рендере useEffect запустится в любом случае, по этому вводим доп свойсто в стейт\r\n            props.getUsersThunkCreator(props.currentPage, props.countOfShownUsers, props.isFirstUsersLoaded);\r\n        }\r\n    }, [props.currentPage]);\r\n\r\n    function followUnfollowUser(id, isFollow) {\r\n        props.followUserThunkCreator(id, isFollow);\r\n    }\r\n\r\n    function loadNextPartOfUsers(nextPage) {\r\n        props.toogleRunUseEffect(true);\r\n        props.setCurrentPage(nextPage);\r\n    }\r\n\r\n    function loadNewUsersAfterPaginationSquareClick(page) {\r\n        props.toogleIsFirstUsersLoaded(false);                  // чтобы партия полученных с сервера юзеров заменила текущий массив юзеров\r\n        props.toogleRunUseEffect(true);\r\n        props.setCurrentPage(page);\r\n    }\r\n\r\n    function changePaginationPages(numberOfClickedSquare) {       // при клике на какой либо квадратик пагинации\r\n        if (numberOfClickedSquare > 0 && numberOfClickedSquare <= maxCountOfPaginationSquares) {                          // чтобы цтфры в квадратиках пагинации не были отрицательными и больше максимально допустимого\r\n            numberOfClickedSquare = Number(numberOfClickedSquare);\r\n            changeCurrentPageForPagination(numberOfClickedSquare);   // изменим текущую страницу\r\n            loadNewUsersAfterPaginationSquareClick(numberOfClickedSquare);\r\n\r\n            if (numberOfClickedSquare > props.numberInLastPaginationSquare) {                  // если цифра в кликнутом квадратике больше чем цифра в последнем квадратике (то есть нажали стрелочку вправо на находясь на посленем квадратике)\r\n                props.setNumbersInFirstLastPaginationSquares((numberOfClickedSquare - 9), numberOfClickedSquare)\r\n                loadNewUsersAfterPaginationSquareClick(numberOfClickedSquare);\r\n            } else if (numberOfClickedSquare < props.numberInFirstPaginationSquare) {          // если цифра в кликнутом квадратике меньше чем цифра в первом квадратике\r\n                props.setNumbersInFirstLastPaginationSquares(numberOfClickedSquare, (numberOfClickedSquare + 9))\r\n                loadNewUsersAfterPaginationSquareClick(numberOfClickedSquare);\r\n            }\r\n        }\r\n    }\r\n\r\n    // ----------- Создадим массив спанов для отображения квадратиков пагинации ----------------\r\n    let paginationSquares = [];\r\n    for (let i = props.numberInFirstPaginationSquare; i <= props.numberInLastPaginationSquare; i++) {\r\n        paginationSquares.push(\r\n            <span\r\n                key={i}\r\n                className={cn(\"users__pagination-single-span\", { \"users__pagination-single-span_active\": i === currentPageForPagination })}     // если i равно текущей страницы додавим класс активности\r\n                onClick={(e) => changePaginationPages(e.currentTarget.innerHTML)}\r\n            >\r\n                {i}\r\n            </span>\r\n        );\r\n    }\r\n    // ----------- / Создадим массив спанов для отображения квадратиков пагинации --------------\r\n\r\n    return <UsersPage\r\n        isPreloaderActive={props.isPreloaderActive}\r\n        usersArray={props.usersArray}\r\n        followUnfollowUser={followUnfollowUser}\r\n        isLoggedIn={props.isLoggedIn}\r\n        clickedFollowButtonsArray={props.clickedFollowButtonsArray}\r\n        currentPage={props.currentPage}\r\n        loadNextPartOfUsers={loadNextPartOfUsers}\r\n        isButtonLoadMoreUsersClicked={props.isButtonLoadMoreUsersClicked}\r\n        currentPageForPagination={currentPageForPagination}\r\n        paginationSquares={paginationSquares}\r\n        changePaginationPages={changePaginationPages}\r\n        maxCountOfPaginationSquares={maxCountOfPaginationSquares}\r\n    />\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        countOfShownUsers: getCountOfShownUsers(state),         // какое количество юзеров показывать за один раз, так же для GET запроса\r\n        totalUsersCountInServer: getTotalUsersCountSelector(state),     // всего юзеров на сервере\r\n        usersArray: getUsersArraySelector(state),\r\n        currentPage: getUsersCurrentPageSelector(state),\r\n        isPreloaderActive: getIsPreloaderActiveSelector(state),\r\n        isLoggedIn: getIsLoggedInSelector(state),\r\n        clickedFollowButtonsArray: getIdClickedFollowButtonsArray(state),\r\n        runUseEffect: getRunUseEffect(state),\r\n        isFirstUsersLoaded: getIsFirstUsersLoaded(state),                   // тут это свойство используется так: если первый раз юзеров уже загрузили больше большой прелоадер показывать не будем, а будем вместо кнопки показать еще юзеров(в самом низу страницы) показывать лотадер кнопки\r\n        isButtonLoadMoreUsersClicked: getIsButtonLoadMoreUsersClicked(state),\r\n        numberInFirstPaginationSquare: getNumberInFirstPaginationSquare(state),\r\n        numberInLastPaginationSquare: getNumberInLastPaginationSquare(state)\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    getUsersThunkCreator,\r\n    followUserThunkCreator,\r\n    setCurrentPage,\r\n    toogleRunUseEffect,\r\n    toogleIsFirstUsersLoaded,\r\n    getNumberInFirstPaginationSquare,\r\n    getNumberInLastPaginationSquare,\r\n    setNumbersInFirstLastPaginationSquares\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UsersPageContainer);\r\n","import { usersAPI } from \"../../DAL/users/api\";\r\nimport {\r\n    setUsersArray, setCurrentPage, setIsPreloaderActive, followUser,\r\n    setClickedButtonId, unSetClickedButtonId, toogleRunUseEffect,\r\n    isButtonLoadMoreUsersClicked\r\n} from \"./actionCreators\";\r\n\r\n\r\nexport const getUsersThunkCreator = (currentPage = 1, usersPerPage = 10, turnOnTheButtonPreloader = false) => async (dispatch) => {\r\n\r\n    if(turnOnTheButtonPreloader) {                     // если мы делаем первый запрос: только перешли на страницу юзеров покажем общий прелоадер, если мы уже заходили и нажали кнопку внизу страницы загрузить еще юзеров покажем вместо кнопки лоадер кнопки, а не общий лоадер\r\n        dispatch(isButtonLoadMoreUsersClicked(true));\r\n    } else {\r\n        dispatch(setIsPreloaderActive(true));\r\n    }\r\n\r\n    const data = await usersAPI.getUsers(currentPage, usersPerPage);\r\n\r\n    if(data.totalCount) {\r\n        dispatch(setUsersArray(data.items, data.totalCount, data.error, turnOnTheButtonPreloader));\r\n        dispatch(setCurrentPage(currentPage));\r\n    }\r\n\r\n    dispatch(toogleRunUseEffect(false));\r\n\r\n    if(turnOnTheButtonPreloader) {\r\n        dispatch(isButtonLoadMoreUsersClicked(false));\r\n    } else {\r\n        dispatch(setIsPreloaderActive(false));\r\n    }\r\n}\r\n\r\nexport const followUserThunkCreator = (userId, isFollow) => async (dispatch) => {\r\n    dispatch(setClickedButtonId(userId));       // чтобы показывать лоадер вместо кнопки\r\n\r\n    if(isFollow) {                  // если пришло true, то есть подписаться на юзера\r\n        const data = await usersAPI.followUser(userId);\r\n\r\n        if(data.resultCode === 0) {\r\n            dispatch(followUser(userId, isFollow));\r\n        } else {\r\n            alert(\"Some Error\");\r\n        }\r\n    } else {\r\n        const data = await usersAPI.unFollowUser(userId);\r\n\r\n        if(data.resultCode === 0) {\r\n            dispatch(followUser(userId, isFollow));\r\n        } else {\r\n            alert(\"Some Error\");\r\n        }\r\n    }\r\n\r\n    dispatch(unSetClickedButtonId(userId));     // чтобы показывать кнопку вместо лоадера\r\n}","import React from \"react\";\r\n\r\nconst NotFoundPage = () => {\r\n    return <h2>404</h2>\r\n}\r\n\r\nexport default NotFoundPage;","import React from \"react\";\r\n\r\nconst MessagesPage = () => {\r\n    return <h2>Messages</h2>\r\n}\r\n\r\nexport default MessagesPage;","import React from \"react\";\r\nimport MessagesPage from \"./MessagesPage\";\r\n\r\nconst MessagesPageContainer = () => {\r\n    return <MessagesPage />\r\n}\r\n\r\nexport default MessagesPageContainer;","import React from \"react\";\r\nimport cn from \"classnames\";\r\nimport ButtonPreloader from \"../../common/ButtonPreloader\";\r\nimport InputReactHookForm from \"../../common/InputReactHookForm\";\r\n\r\n\r\nconst LoginModalWindowForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit(props.onSubmit)} className=\"login__form\">\r\n            <InputReactHookForm\r\n                CSSclasses={[\"login__form-input\"]}\r\n                type=\"text\"\r\n                register={props.register}\r\n                name=\"email\"\r\n                errors={props.errors.email}\r\n                minLength={3}\r\n                required={true}\r\n                placeholder={\"Enter your Email\"}\r\n                onChangeOwnFunction={props.deleteErrorMessage}\r\n            />\r\n            <InputReactHookForm\r\n                CSSclasses={[\"login__form-input\"]}\r\n                type=\"password\"\r\n                register={props.register}\r\n                name=\"password\"\r\n                errors={props.errors.password}\r\n                minLength={3}\r\n                required={true}\r\n                placeholder={\"Enter your Password\"}\r\n                onChangeOwnFunction={props.deleteErrorMessage}\r\n            />\r\n            <input name=\"rememberMe\" ref={props.register} type=\"checkbox\" className=\"login__form-input\" /><span>Remember Me</span>\r\n\r\n            {/* Если с сервера пришла капча */}\r\n            {\r\n                props.isCapthaActive\r\n                    ? <><img src={props.captchaURL} alt=\"captcha\" className=\"login__captcha\" />\r\n                        <InputReactHookForm\r\n                            CSSclasses={[\"login__form-input\"]}\r\n                            type=\"text\"\r\n                            register={props.register}\r\n                            name=\"captcha\"\r\n                            errors={props.errors.captcha}\r\n                            minLength={3}\r\n                            required={true}\r\n                            placeholder={\"Enter symbols\"}\r\n                        />\r\n                    </>\r\n                    : null\r\n            }\r\n            {/* / Если с сервера пришла капча */}\r\n\r\n            {/* Если с сервера пришел ответ о неправильном паролде или логине */}\r\n            {props.responseErrorTextFromServer\r\n                ? <p className=\"animate__animated animate__lightSpeedInRight error__message\" >{ props.responseErrorTextFromServer }</p>\r\n                : null }\r\n            {/* / Если с сервера пришел ответ о неправильном паролде или логине */}\r\n            \r\n            <button className={cn(\"button\", \"button_login\", { \"displaynone\": props.isLoginButtonClicked })}>Sign In</button>\r\n            <ButtonPreloader displayNone={!props.isLoginButtonClicked} dotsCount={3} classes={[\"loader\", \"loader_loginWindow-loginbutton\"]} />\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default LoginModalWindowForm;","import { isAuthThunkCreator } from \"../authUserData/thunkCreators\";\r\nimport { initializedApp } from \"./actionCreators\";\r\n\r\nexport const initializedAppThunkCreator = () => (dispatch) => {\r\n    const authThunkCreatorResult = dispatch(isAuthThunkCreator());\r\n\r\n    Promise.all([authThunkCreatorResult])\r\n        .then(() => {\r\n            dispatch(initializedApp(true));\r\n        });\r\n}","import { userInfoAPI } from \"../../DAL/userInfo/api\";\r\nimport { loginAPI } from \"../../DAL/login/api\";\r\nimport {\r\n    setUserData, setUserStatusIntoState,\r\n    setUserInfoIntoState\r\n} from \"./actionCreators\";\r\n\r\nexport const isAuthThunkCreator = () => async (dispatch) => {\r\n    const data = await loginAPI.isAuth();\r\n\r\n    if (data.resultCode === 0) {            // если пользователь залогинен\r\n        const userData = { userId: data.data.id, userLogin: data.data.login, userEmail: data.data.email, isUserLoggedIn: true }  // 1. задиспатчим первоначальные данные(которые приходят с ответом от сервера) в стейт\r\n        dispatch(setUserData(userData));\r\n\r\n        const status = await userInfoAPI.getUserStatus(data.data.id);\r\n        if(status) {\r\n            dispatch(setUserStatusIntoState(status));\r\n        }\r\n\r\n        const userInfo = await userInfoAPI.getUserInfo(data.data.id);\r\n        if(userInfo) {\r\n            dispatch(setUserInfoIntoState(userInfo));\r\n        }\r\n    }\r\n}","export const getIsModalLoginWindowActiveSelector =  (state) => {\r\n    return state.loginModalWindow.isModalLoginWindowActive;\r\n}\r\n\r\nexport const getIsLoginButtonClickedSelector =  (state) => {\r\n    return state.loginModalWindow.isLoginButtonClicked;\r\n}\r\n\r\nexport const getIsCaptchActiveSelector =  (state) => {\r\n    return state.loginModalWindow.isCapthaActive;\r\n}\r\n\r\nexport const getCaptchaURLSelector =  (state) => {\r\n    return state.loginModalWindow.captchaURL;\r\n}\r\n\r\nexport const getResponseErrorTextSelector =  (state) => {\r\n    return state.loginModalWindow.responseErrorText;\r\n}\r\n\r\nexport const getIsLoginRequirementSelector =  (state) => {\r\n    return state.loginModalWindow.isLoginRequirementActive;\r\n}","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport LoginModalWindowForm from \"./LoginModalWindowForm\";\r\nimport { logInThunkCreator } from \"../../../BLL/loginModalWindow/thunkCreators\"\r\nimport {\r\n    getIsLoginButtonClickedSelector, getIsCaptchActiveSelector,\r\n    getCaptchaURLSelector, getResponseErrorTextSelector\r\n} from \"../../../BLL/loginModalWindow/selectors\";\r\nimport { setResponseErrorTextIntoState, toogleIsLoginRequirement } from \"../../../BLL/loginModalWindow/actionCreators\";\r\nimport { setRunUseEffectAppComponent } from \"../../../BLL/authUserData/actionCreators\";\r\n\r\nconst LoginModalWindowFormContainer = (props) => {\r\n\r\n    const { register, handleSubmit, errors } = useForm();\r\n\r\n    function onSubmit(formData) {\r\n        // тут действия которые выполнятся при сабмите формы\r\n        props.toogleIsLoginRequirement(false);      // уберем надпись о необходимости залогиниться\r\n        props.logInThunkCreator(formData.email, formData.password, formData.rememberMe, formData.captcha);\r\n    }\r\n\r\n    function deleteErrorMessage() {             // эта функция вызывсается когда юзер печатает что-либо в полях логин или пароль\r\n        if(props.responseErrorTextFromServer) {       // если в стейте была ошибка от сервера, то при начал5е набора она из сейта и из UI сотрется\r\n            props.setResponseErrorTextIntoState(null);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <LoginModalWindowForm\r\n            onSubmit={onSubmit}\r\n            register={register}\r\n            handleSubmit={handleSubmit}\r\n            deleteErrorMessage={deleteErrorMessage}\r\n            errors={errors}\r\n            isLoginButtonClicked={props.isLoginButtonClicked}\r\n            isCapthaActive={props.isCapthaActive}\r\n            captchaURL={props.captchaURL}\r\n            responseErrorTextFromServer={props.responseErrorTextFromServer}\r\n        />\r\n    );\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isLoginButtonClicked: getIsLoginButtonClickedSelector(state),\r\n        isCapthaActive: getIsCaptchActiveSelector(state),\r\n        captchaURL: getCaptchaURLSelector(state),\r\n        responseErrorTextFromServer: getResponseErrorTextSelector(state)\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    logInThunkCreator,\r\n    setResponseErrorTextIntoState,\r\n    setRunUseEffectAppComponent,\r\n    toogleIsLoginRequirement\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginModalWindowFormContainer);","import {\r\n    setIsModalLoginWindowActive, setIsModalLoginWindowButtonClicked,\r\n    setCaptchaIntoState\r\n} from \"./actionCreators\";\r\nimport { setIsHeaderLoginButtonClicked } from \"../../BLL/header/actionCreators\";\r\nimport { loginAPI } from \"./../../DAL/login/api\";\r\nimport { setResponseErrorTextIntoState } from \"./../loginModalWindow/actionCreators\";\r\nimport { initializedAppThunkCreator } from \"../initializedApp/thunkCreators\";\r\n\r\n\r\n\r\nexport const logInThunkCreator = (email, password, rememberMe = false, captcha = false) => async (dispatch) => {\r\n    dispatch(setIsModalLoginWindowButtonClicked(true));\r\n\r\n    const data = await loginAPI.logIn(email, password, rememberMe, captcha);\r\n\r\n    if (data.resultCode === 0) {            // если пользователь залогинен\r\n        dispatch(initializedAppThunkCreator());\r\n        dispatch(setIsModalLoginWindowActive(false));\r\n        dispatch(setIsHeaderLoginButtonClicked(false));\r\n        dispatch(setCaptchaIntoState(false, null));\r\n    } else if (data.resultCode === 10) {             // captcha\r\n        loginAPI.getCaptcha()\r\n            .then(captchaURL => {\r\n                dispatch(setCaptchaIntoState(true, captchaURL));\r\n            })\r\n    } else if(data.resultCode === 1) {\r\n        const responseErrorText =  data.messages[0];\r\n        dispatch(setResponseErrorTextIntoState(responseErrorText));\r\n    } else {\r\n        alert(\"Some Error\");\r\n    }\r\n\r\n    dispatch(setIsModalLoginWindowButtonClicked(false));\r\n}","import React from \"react\";\r\nimport cn from \"classnames\";\r\nimport LoginModalWindowFormContainer from \"./LoginModalWindowForm/LoginModalWindowFormContainer\";\r\n// import { Redirect } from \"react-router-dom\";\r\n\r\nconst LoginModalWindow = (props) => {\r\n\r\n    // if(props.isLoggedIn) {\r\n    //     return <Redirect to=\"/\" />\r\n    // }\r\n\r\n    // React.useEffect( () => {\r\n    //     debugger\r\n    //     // return <Redirect to=\"/\" />\r\n    //     alert('useEffect, props.isLoggedIn - ', props.isLoggedIn)\r\n    // }, [props.isLoggedIn] );\r\n\r\n    return (\r\n        <div className={cn(\"login\", { \"login__deactivate\": !props.isModalLoginWindowActive }, { \"login__activate\": props.isModalLoginWindowActive })}>\r\n\r\n            <div className=\"login__wrapper\">\r\n                <div className=\"login__cross\" onClick={() => props.toogleIsModalLoginWindowActive(false)}>\r\n                    <span></span>\r\n                    <span></span>\r\n                </div>\r\n                <div className=\"login__logo-and-title\">\r\n                    <img src=\"#\" alt=\"logo\" className=\"login__logo\" />\r\n                    <h2 className=\"login__title\">JS Friend Finder</h2>\r\n                </div>\r\n\r\n                {props.isLoginRequirementActive\r\n                    ? <p className=\"login__warning\">You must be logged in before you can visit this page</p>\r\n                    : null\r\n                }\r\n\r\n\r\n                <h3 className=\"login__subtitle\">Find JS Friends</h3>\r\n\r\n                <div className=\"login__form-wrapper\">\r\n                    <p className=\"login__sign-in\">Sign in now and meet awesome peaple around the Java Script</p>\r\n\r\n                    <LoginModalWindowFormContainer />\r\n\r\n                </div>\r\n\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LoginModalWindow;","import React from \"react\";\r\nimport LoginModalWindow from \"./LoginModalWindow\";\r\nimport { getIsModalLoginWindowActiveSelector, getIsLoginRequirementSelector } from \"../../BLL/loginModalWindow/selectors\";\r\nimport { setIsModalLoginWindowActive, toogleIsLoginRequirement } from \"../../BLL/loginModalWindow/actionCreators\";\r\nimport { getIsHeaderLoginButtonClickedSelector } from \"../../BLL/header/selectors\";\r\nimport { getIsLoggedInSelector } from \"../../BLL/authUserData/selectors\";\r\nimport { setIsHeaderLoginButtonClicked } from \"../../BLL/header/actionCreators\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst LoginModalWindowContainer = (props) => {\r\n\r\n    function toogleIsModalLoginWindowActive(IsModalLoginWindowActive) {           // функция для изменение в стейте состояния показывать ли анимацию кнопки логина в хедере\r\n        props.setIsModalLoginWindowActive(IsModalLoginWindowActive);\r\n        props.setIsHeaderLoginButtonClicked(IsModalLoginWindowActive);\r\n        props.toogleIsLoginRequirement(false);\r\n\r\n    }\r\n\r\n    return <LoginModalWindow\r\n        isModalLoginWindowActive={props.isModalLoginWindowActive}\r\n        toogleIsModalLoginWindowActive={toogleIsModalLoginWindowActive}\r\n        isHeaderLoginButtonClicked={props.isHeaderLoginButtonClicked}\r\n        isLoggedIn={props.isLoggedIn}\r\n        isLoginRequirementActive={props.isLoginRequirementActive}\r\n    />\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isModalLoginWindowActive: getIsModalLoginWindowActiveSelector(state),\r\n        isHeaderLoginButtonClicked: getIsHeaderLoginButtonClickedSelector(state),\r\n        isLoggedIn: getIsLoggedInSelector(state),\r\n        isLoginRequirementActive: getIsLoginRequirementSelector(state)\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    setIsModalLoginWindowActive,\r\n    setIsHeaderLoginButtonClicked,\r\n    toogleIsLoginRequirement\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginModalWindowContainer);","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst SideBarNav = (props) => {\r\n    return (\r\n        <nav className=\"sidebar-left__nav\">\r\n            <ul className=\"sidebar-left__ul\">\r\n                <li className=\"sidebar-left__li\"><NavLink to=\"/users\" className=\"sidebar-left__a\">People Nearby</NavLink></li>\r\n                <li className=\"sidebar-left__li\"><NavLink to={\"/profile/\" + props.ownerId} className=\"sidebar-left__a\">My Profile</NavLink></li>\r\n                <li className=\"sidebar-left__li\"><NavLink to=\"/messages\" className=\"sidebar-left__a\">Messages</NavLink></li>\r\n            </ul>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default SideBarNav;","import React from \"react\";\r\nimport SideBarNav from \"./SideBarNav\";\r\nimport { getOwnerIdSelector } from \"../../../BLL/authUserData/selectors\";\r\nimport { connect } from \"react-redux\";\r\n\r\n\r\nconst SideBarNavContainer = (props) => {\r\n    return (\r\n        <SideBarNav ownerId={props.ownerId} />\r\n    );\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        ownerId: getOwnerIdSelector(state)\r\n    }\r\n} \r\n\r\nexport default connect(mapStateToProps, {})(SideBarNavContainer);","import React from \"react\";\r\n\r\nconst SideBarUserInfo = (props) => {\r\n    return (\r\n        <div className=\"sidebar-left__user-info-wrapper\">\r\n            <div className=\"sidebar-left__user-photo\">\r\n                {props.isLoggedIn ? <img src={ props.ownerSmallPhoto } alt=\"User\" className=\"sidebar-left__user-photo-img\" /> : null}\r\n            </div>\r\n            <div className=\"sidebar-left__user-nameandstatus\">\r\n                <h2 className=\"sidebar-left__user-name\">{ props.isLoggedIn ? props.ownerFullName : null }</h2>\r\n                <p className=\"sidebar-left__user-status\">{ props.isLoggedIn ? props.ownerStatus : null }</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SideBarUserInfo;","import React from \"react\";\r\nimport SideBarUserInfo from \"./SideBarUserInfo\";\r\nimport {\r\n    getOwnerStatusSelector, getOwnerFullNameSelector,\r\n    getOwnerSmallPhotoSelector, getIsLoggedInSelector\r\n} from \"../../../BLL/authUserData/selectors\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst SideBarUserInfoContainer = (props) => {\r\n    return <SideBarUserInfo\r\n        isLoggedIn={props.isLoggedIn}\r\n        ownerStatus={props.ownerStatus}\r\n        ownerFullName={props.ownerFullName}\r\n        ownerSmallPhoto={props.ownerSmallPhoto}\r\n    />\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isLoggedIn: getIsLoggedInSelector(state),\r\n        ownerStatus: getOwnerStatusSelector(state),\r\n        ownerFullName: getOwnerFullNameSelector(state),\r\n        ownerSmallPhoto: getOwnerSmallPhotoSelector(state)\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {})(SideBarUserInfoContainer);","import React from \"react\";\r\nimport SideBarNavContainer from \"./SideBarNav/SideBarNavContainer\";\r\nimport SideBarUserInfoContainer from \"./SideBarUserInfo/SideBarUserInfoContainer\";\r\n\r\nconst SideBar = () => {\r\n    return (\r\n        <div className=\"grid-wrapper__sidebar-left sidebar-left\">\r\n            \r\n            <SideBarUserInfoContainer />\r\n\r\n            <SideBarNavContainer />\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SideBar;","import React from \"react\";\r\nimport SideBar from \"./SideBar\";\r\n\r\nconst SideBarContainer = () => {\r\n    return <SideBar />\r\n}\r\n\r\nexport default SideBarContainer;","import React from \"react\";\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer className=\"footer\">\r\n\r\n            <div className=\"footer__band\"></div>\r\n\r\n            <div className=\"container\">\r\n\r\n                <div className=\"footer__grid-wrapper\">\r\n                    <div className=\"footer__logo-and-social\">\r\n                        <img src=\"#\" alt=\"logo\" className=\"header__logo\" />\r\n                        <h2 className=\"footer__logo-title\">JS Friend Finder</h2>\r\n                    </div>\r\n                    <div className=\"footer__for-individuas\">\r\n                        <h3 className=\"footer__title\">For individuals</h3>\r\n                        <ul className=\"footer__ul\">\r\n                            <li className=\"footer__li\"><a href=\"#\" className=\"footer__a\">SignUp</a></li>\r\n                            <li className=\"footer__li\"><a href=\"#\" className=\"footer__a\">LogIn</a></li>\r\n                            <li className=\"footer__li\"><a href=\"#\" className=\"footer__a\">Explore</a></li>\r\n                            <li className=\"footer__li\"><a href=\"#\" className=\"footer__a\">Finder app</a></li>\r\n                            <li className=\"footer__li\"><a href=\"#\" className=\"footer__a\">Features</a></li>\r\n                        </ul>\r\n                    </div>\r\n                    <div className=\"footer__for-businesses\">\r\n                        <h3 className=\"footer__title\">For businesses</h3>\r\n                        <ul className=\"footer__ul\">\r\n                            <li className=\"footer__li\"><a href=\"#\" className=\"footer__a\">Business signup</a></li>\r\n                            <li className=\"footer__li\"><a href=\"#\" className=\"footer__a\">Business login</a></li>\r\n                            <li className=\"footer__li\"><a href=\"#\" className=\"footer__a\">Benefits</a></li>\r\n                            <li className=\"footer__li\"><a href=\"#\" className=\"footer__a\">Resources</a></li>\r\n                            <li className=\"footer__li\"><a href=\"#\" className=\"footer__a\">Advertise</a></li>\r\n                            <li className=\"footer__li\"><a href=\"#\" className=\"footer__a\">Setup</a></li>\r\n                        </ul>\r\n                    </div>\r\n                    <div className=\"footer__about\">\r\n                        <h3 className=\"footer__title\">About</h3>\r\n                        <ul className=\"footer__ul\">\r\n                            <li className=\"footer__li\"><a href=\"#\" className=\"footer__a\">About us</a></li>\r\n                            <li className=\"footer__li\"><a href=\"#\" className=\"footer__a\">Contact us</a></li>\r\n                            <li className=\"footer__li\"><a href=\"#\" className=\"footer__a\">Privacy Policy</a></li>\r\n                            <li className=\"footer__li\"><a href=\"#\" className=\"footer__a\">Terms</a></li>\r\n                            <li className=\"footer__li\"><a href=\"#\" className=\"footer__a\">Help</a></li>\r\n                        </ul>\r\n                    </div>\r\n                    <div className=\"footer__contacts\">\r\n                        <h3 className=\"footer__title\">Contact Us</h3>\r\n                        <ul className=\"footer__ul\">\r\n                            <li className=\"footer__li\"><a href=\"tel:+123456789\" className=\"footer__a\">+1(234) 567 89</a></li>\r\n                            <li className=\"footer__li\"><a href=\"email:someemail@someemail.com\"\r\n                                className=\"footer__a\">someemail@someemail.com</a></li>\r\n                            <li className=\"footer__li\"><a href=\"#\" className=\"footer__a\">Some Adress</a></li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </footer>\r\n    );\r\n}\r\n\r\nexport default Footer;","export const getIsAppInitializedSelector =  (state) => {\r\n    return state.initializedApp.isAppInitialized;\r\n}","import React, { useEffect } from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport HeaderContainer from \"./UI/Header/HeaderContainer\";\r\nimport './App.css';\r\nimport UsersPageContainer from \"./UI/UsersPage/UsersPageContainer\";\r\nimport NotFoundPage from \"./UI/NotFoundPage\";\r\n// import ProfilePageContainer from \"./UI/ProfilePage/ProfilePageContainer\";\r\nimport MessagesPageContainer from './UI/MessagesPage/MessagesPageContainer';\r\nimport LoginModalWindowContainer from \"./UI/LoginModalWindow/LoginModalWindowContainer\";\r\nimport SideBarContainer from \"./UI/SideBar/SideBarContainer\";\r\nimport Footer from \"./UI/Footer/Footer\";\r\nimport { getIsAppInitializedSelector } from \"./BLL/initializedApp/selectors\";\r\nimport { initializedAppThunkCreator } from \"./BLL/initializedApp/thunkCreators\";\r\nimport { setRunUseEffectAppComponent } from \"./BLL/authUserData/actionCreators\";\r\nimport { getIsLoggedInSelector, getOwnerIdSelector, getRunUseEffectAppComponent } from \"./BLL/authUserData/selectors\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport AppPreloader from \"./UI/common/AppPreloader\";\r\nconst ProfilePageContainer = React.lazy(() => import('./UI/ProfilePage/ProfilePageContainer'));\r\n\r\nconst App = (props) => {\r\n\r\n  useEffect(() => {\r\n    if (props.runUseEffectAppComponent) {    // для того чтобы в useEffect в App.js делать запрос на сервер авторизован ли пользователь(me) только 1 раз при логине и логауте. useEffect делает 2 раза так как зависит от свойства стейта isLoggedIn, а при авторизации и логауте оно меняется и получается запрос уходит 2 раза\r\n      props.setRunUseEffectAppComponent(false);\r\n      props.initializedAppThunkCreator();\r\n    }\r\n  }, [props.isLoggedIn]);\r\n\r\n  if (!props.isAppInitialized) {\r\n    return <AppPreloader />\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <HeaderContainer />\r\n\r\n      <div className=\"container\">\r\n\r\n        <div className=\"grid-wrapper\">\r\n\r\n          <SideBarContainer />\r\n\r\n          <LoginModalWindowContainer />\r\n\r\n          <Switch>\r\n            { /* Если залогинены редиректнет на свой парофиль, если нет на профиль Димыча */}\r\n            {\r\n              props.isLoggedIn\r\n                ? <Route exact path=\"/\" render={() => <Redirect to={\"profile/\" + props.ownerId} />} />\r\n                : <Route exact path=\"/\" render={() => <Redirect to={\"profile/\" + 2} />} />\r\n            }\r\n\r\n            <Route path='/users' render={() => <UsersPageContainer />} />\r\n\r\n            <Route exact path='/profile/:userId' render={() => {\r\n              return <React.Suspense fallback={<AppPreloader />}>\r\n                <ProfilePageContainer />\r\n              </React.Suspense>\r\n            }} />\r\n\r\n            {/* <Route exact path='/profile/:userId' render={() => <ProfilePageContainer />} /> */}\r\n            <Route path='/messages' render={() => <MessagesPageContainer />} />\r\n            <Route path='*' render={() => <NotFoundPage />} />\r\n          </Switch>\r\n\r\n        </div>\r\n\r\n      </div>\r\n\r\n      <Footer />\r\n\r\n    </>\r\n  );\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isAppInitialized: getIsAppInitializedSelector(state),\r\n    isLoggedIn: getIsLoggedInSelector(state),\r\n    ownerId: getOwnerIdSelector(state),\r\n    runUseEffectAppComponent: getRunUseEffectAppComponent(state)\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, { initializedAppThunkCreator, setRunUseEffectAppComponent })(App);","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import {\r\n    IS_MODAL_LOGIN_WINDOW_ACTIVE, IS_MODAL_LOGIN_WINDOW_BUTTON_CLICKED,\r\n    SET_CAPTCHA_INTO_STATE, SET_RESPONSE_ERROR_TEXT_INTO_STATE,\r\n    TOOGLE_IS_LOGIN_REQUIREMENT\r\n} from \"./actionTypes\";\r\n\r\nlet initialState = {\r\n    isModalLoginWindowActive: false,\r\n    isCapthaActive: false,\r\n    captchaURL: null,\r\n    isLoginButtonClicked: false,\r\n    responseErrorText: null,\r\n    isLoginRequirementActive: false\r\n};\r\n\r\nconst loginModalWindowReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case IS_MODAL_LOGIN_WINDOW_ACTIVE: {\r\n            const superState = {\r\n                ...state,\r\n                isModalLoginWindowActive: action.isModalLoginWindowActive\r\n            };\r\n            return superState;\r\n        }\r\n\r\n        case IS_MODAL_LOGIN_WINDOW_BUTTON_CLICKED: {\r\n            const superState = {\r\n                ...state,\r\n                isLoginButtonClicked: action.isLoginButtonClicked\r\n            };\r\n            return superState;\r\n        }\r\n\r\n        case SET_RESPONSE_ERROR_TEXT_INTO_STATE: {\r\n            const superState = {\r\n                ...state,\r\n                responseErrorText: action.responseErrorText\r\n            };\r\n            return superState;\r\n        }\r\n\r\n        case SET_CAPTCHA_INTO_STATE: {\r\n            const superState = {\r\n                ...state,\r\n                isCapthaActive: action.isCapthaActive,\r\n                captchaURL: action.captchaURL\r\n            };\r\n            return superState;\r\n        }\r\n\r\n        case TOOGLE_IS_LOGIN_REQUIREMENT: {\r\n            const superState = {\r\n                ...state,\r\n                isLoginRequirementActive: action.isLoginRequirementActive\r\n            };\r\n            return superState;\r\n        }\r\n\r\n        default: return state;\r\n    }\r\n};\r\n\r\nexport default loginModalWindowReducer;","import {\r\n    LOGGED_IN_OUT_USER_DATA, SET_USER_STATUS_INTO_STATE,\r\n    SET_USER_INFO_INTO_STATE, SET_USER_PHOTOS_INTO_STATE,\r\n    TOOGLE_LOOKING_FOR_A_JOB, RUN_USE_EFFECT_APP_COMPONENT\r\n} from \"./actionTypes\";\r\n\r\nconst initialState = {\r\n    runUseEffectAppComponent: true,          // для того чтобы в useEffect в App.js делать запрос на сервер авторизован ли пользователь(me) только 1 раз при логине и логауте. useEffect делает 2 раза так как зависит от свойства стейта isLoggedIn, а при авторизации и логауте оно меняется и получается запрос уходит 2 раза\r\n    isLoggedIn: false,\r\n    id: null,\r\n    login: \"\",\r\n    email: \"\",\r\n    status: \"\",\r\n    aboutMe: \"\",\r\n    lookingForAJob: false,\r\n    lookingForAJobDescription: null,\r\n    fullName: null,\r\n    contacts: {\r\n        facebook: null,\r\n        github: null,\r\n        instagram: null,\r\n        mainLink: null,\r\n        twitter: null,\r\n        vk: null,\r\n        website: null,\r\n        youtube: null\r\n    },\r\n    photos: {\r\n        small: null,\r\n        large: null\r\n    }\r\n};\r\n\r\nconst authUserDataReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case LOGGED_IN_OUT_USER_DATA: {\r\n            const superState = {\r\n                ...state,\r\n                id: action.id,\r\n                login: action.login,\r\n                email: action.email,\r\n                isLoggedIn: action.isLoggedIn\r\n            };\r\n            return superState;\r\n        }\r\n\r\n        case SET_USER_STATUS_INTO_STATE: {\r\n            const superState = {\r\n                ...state,\r\n                status: action.status\r\n            };\r\n            return superState;\r\n        }\r\n\r\n        case RUN_USE_EFFECT_APP_COMPONENT: {                // смотри комментарий по этому свойству в редюсере\r\n            const superState = {\r\n                ...state,\r\n                runUseEffectAppComponent: action.runUseEffectAppComponent\r\n            };\r\n            return superState;\r\n        }\r\n\r\n        case TOOGLE_LOOKING_FOR_A_JOB: {\r\n            const superState = {\r\n                ...state,\r\n                lookingForAJob: action.lookingForAJob\r\n            };\r\n            return superState;\r\n        }\r\n\r\n        case SET_USER_PHOTOS_INTO_STATE: {\r\n            const superState = {\r\n                ...state,\r\n                photos: {\r\n                    ...state.photos,\r\n                    small: action.photoSmall,\r\n                    large: action.photoLarge\r\n                }\r\n            };\r\n            return superState;\r\n        }\r\n\r\n        case SET_USER_INFO_INTO_STATE: {\r\n            const superState = {\r\n                ...state,\r\n                aboutMe: action.aboutMe,\r\n                lookingForAJob: action.lookingForAJob,\r\n                lookingForAJobDescription: action.lookingForAJobDescription,\r\n                fullName: action.fullName,\r\n                photos: {\r\n                    ...state.photos,\r\n                    small: action.photoSmall,\r\n                    large: action.photoLarge\r\n                },\r\n                contacts: {\r\n                    ...state.contacts,\r\n                    facebook: action.facebook,\r\n                    github: action.github,\r\n                    instagram: action.instagram,\r\n                    mainLink: action.mainLink,\r\n                    twitter: action.twitter,\r\n                    vk: action.vk,\r\n                    website: action.website,\r\n                    youtube: action.youtube\r\n                }\r\n            };\r\n            return superState;\r\n        }\r\n\r\n        default: return state;\r\n    }\r\n};\r\n\r\nexport default authUserDataReducer;","import { IS_HEADER_LOGIN_BUTTON_CLICKED, IS_HEADER_SEARCH_BUTTON_CLICKED } from \"./actionTypes\";\r\n\r\nconst initialState = {\r\n    isLoginButtonClicked: false,\r\n    isSearchButtonClicked: false\r\n};\r\n\r\nconst headerReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case IS_HEADER_LOGIN_BUTTON_CLICKED: {\r\n            const superState = {\r\n                ...state,\r\n                isLoginButtonClicked: action.isLoginButtonClicked\r\n            };\r\n            return superState;\r\n        }\r\n\r\n        case IS_HEADER_SEARCH_BUTTON_CLICKED: {\r\n            const superState = {\r\n                ...state,\r\n                isSearchButtonClicked: action.isSearchButtonClicked\r\n            };\r\n            return superState;\r\n        }\r\n\r\n        default: return state;\r\n    }\r\n};\r\n\r\nexport default headerReducer;","import { INITIALIZED_APP } from \"./actionTypes\";\r\n\r\nconst initialState = {\r\n    isAppInitialized: false\r\n};\r\n\r\nconst initializedAppReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZED_APP: {\r\n            const superState = {\r\n                ...state,\r\n                isAppInitialized: action.isAppInitialized\r\n            };\r\n            return superState;\r\n        }\r\n        default: return state;\r\n    }\r\n};\r\n\r\nexport default initializedAppReducer;","import { SET_USER_STATUS_INTO_STATE, SET_USER_INFO_INTO_STATE } from \"./actionTypes\";\r\n\r\nconst initialState = {\r\n    id: null,\r\n    status: \"\",\r\n    aboutMe: \"\",\r\n    lookingForAJob: false,\r\n    lookingForAJobDescription: null,\r\n    fullName: null,\r\n    contacts: {\r\n        facebook: null,\r\n        github: null,\r\n        instagram: null,\r\n        mainLink: null,\r\n        twitter: null,\r\n        vk: null,\r\n        website: null,\r\n        youtube: null\r\n    },\r\n    photos: {\r\n        small: null,\r\n        large: null\r\n    }\r\n};\r\n\r\nconst notOwnerUserDataReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n        case SET_USER_STATUS_INTO_STATE: {\r\n            const superState = {\r\n                ...state,\r\n                status: action.status\r\n            };\r\n            return superState;\r\n        }\r\n\r\n        case SET_USER_INFO_INTO_STATE: {\r\n            const superState = {\r\n                ...state,\r\n                id: action.id,\r\n                aboutMe: action.aboutMe,\r\n                lookingForAJob: action.lookingForAJob,\r\n                lookingForAJobDescription: action.lookingForAJobDescription,\r\n                fullName: action.fullName,\r\n                photos: {\r\n                    ...state.photos,\r\n                    small: action.photoSmall,\r\n                    large: action.photoLarge\r\n                },\r\n                contacts: {\r\n                    ...state.contacts,\r\n                    facebook: action.facebook,\r\n                    github: action.github,\r\n                    instagram: action.instagram,\r\n                    mainLink: action.mainLink,\r\n                    twitter: action.twitter,\r\n                    vk: action.vk,\r\n                    website: action.website,\r\n                    youtube: action.youtube\r\n                }\r\n            };\r\n            return superState;\r\n        }\r\n\r\n        default: return state;\r\n    }\r\n};\r\n\r\nexport default notOwnerUserDataReducer;","import { IS_OWNER_PROFILE_PAGE_SAVE_CHANGES_BUTTON_CLICKED, IS_OWNER_PROFILE_PAGE_UPDATE_PHOTO_BUTTON_CLICKED } from \"./actionTypes\";\r\n\r\nconst initialState = {\r\n    isSaveChangesButtonClicked: false,\r\n    isUpdatePhotoButtonClicked: false\r\n};\r\n\r\nconst ownerProfilePageReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n        case IS_OWNER_PROFILE_PAGE_SAVE_CHANGES_BUTTON_CLICKED: {\r\n            const superState = {\r\n                ...state,\r\n                isSaveChangesButtonClicked: action.isClicked\r\n            };\r\n            return superState;\r\n        }\r\n\r\n        case IS_OWNER_PROFILE_PAGE_UPDATE_PHOTO_BUTTON_CLICKED: {\r\n            const superState = {\r\n                ...state,\r\n                isUpdatePhotoButtonClicked: action.isClicked\r\n            };\r\n            return superState;\r\n        }\r\n\r\n        \r\n        default: return state;\r\n    }\r\n};\r\n\r\nexport default ownerProfilePageReducer;","import {\r\n    SET_USERS_ARRAY_TOTAL_COUNT_ERROR_INTO_STATE,\r\n    SET_CURRENT_PAGE_INTO_STATE,\r\n    IS_PRELOADER_ACTIVE_INTO_STATE, TOOGLE_FOLLOW_USER,\r\n    SET_FOLLOW_BUTTON_CLICKED_ID_INTO_STATE, UN_SET_FOLLOW_BUTTON_CLICKED_ID_INTO_STATE,\r\n    TOOGLE_RUN_USE_EFFECT, IS_BUTTON_LOAD_MORE_USERS_CLICKED, TOOGLE_IS_FIRST_USERS_LOADED,\r\n    SET_NUMBERS_IN_FIRST_LAST_PAGINATION_SQUARES\r\n} from \"./actionTypes\";\r\n\r\nconst initialState = {\r\n    items: [\r\n        {\r\n            name: null,\r\n            id: null,\r\n            uniqueUrlName: null,\r\n            photos: {\r\n                small: null,\r\n                large: null\r\n            },\r\n            status: null,\r\n            followed: false\r\n        }\r\n    ],\r\n\r\n    isPreloaderActive: false,\r\n    isButtonLoadMoreUsersClicked: false,\r\n    currentPage: 1,         // используется только для работы с книпкой внизу \"Sow more Users\", для пагинации используется свойство созданное при помощи useState\r\n    totalCount: 0,          // всего юзеров на сервере\r\n    countOfShownUsers: 5,   // количесвто показываемых на странице юзеров, используется при GET запросе на сервер и получении значения максимально возможных показываемых квавдратиков пагинации в usersPage, также если мы на последней странице списка юзеров, не будет показываться кнопка \"Sow more Users\"\r\n    error: null,\r\n    isFirstUsersLoaded: false,  // Если первые юзеры загружены то будем добавлять юзеров в стейт, в противном случае заменим initialState.items, который итзначально содержит один айтем с null, на массив с юзерами полученными в первый раз\r\n\r\n    runUseEffectInUsersPageContainer: true,     // введено для того чтобы: при первом рендере компонента useEffect выполняется всегда, даже если переменная пекреданная ему не поменялась. Чтобы useEffect не запускался каждый раз при рендере(переходе например с другой страницы) вводим условие при котором он булдет запускаться\r\n\r\n    clickedButtonsIds: [],          // массив ид по которым кликнули чтобы подписаться отписаться, чтобы показывать лоадер вместо кнопки\r\n\r\n    numberInFirstPaginationSquare: 1,\r\n    numberInLastPaginationSquare: 10\r\n};\r\n\r\nconst usersReducers = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USERS_ARRAY_TOTAL_COUNT_ERROR_INTO_STATE: {            // меняем в стейте массив юзеров(items), totalCount, error\r\n            const superState = {\r\n                ...state,\r\n                items: state.isFirstUsersLoaded ? [...state.items, ...action.usersArray] : [...action.usersArray], // Если первые юзеры загружены то будем добавлять юзеров в стейт, в противном случае заменим initialState.items, который итзначально содержит один айтем с null, на массив с юзерами полученными в первый раз\r\n                totalCount: action.totalCount,\r\n                error: action.error,\r\n                isFirstUsersLoaded: true\r\n            };\r\n            return superState;\r\n        }\r\n\r\n        case SET_CURRENT_PAGE_INTO_STATE: {\r\n            const superState = {\r\n                ...state,\r\n                currentPage: action.currentPage\r\n            };\r\n            return superState;\r\n        }\r\n\r\n        case IS_BUTTON_LOAD_MORE_USERS_CLICKED: {\r\n            const superState = {\r\n                ...state,\r\n                isButtonLoadMoreUsersClicked: action.isClicked\r\n            };\r\n            return superState;\r\n        }\r\n\r\n        case TOOGLE_RUN_USE_EFFECT: {\r\n            const superState = {\r\n                ...state,\r\n                runUseEffectInUsersPageContainer: action.booleanVariable\r\n            };\r\n            return superState;\r\n        }\r\n\r\n        case IS_PRELOADER_ACTIVE_INTO_STATE: {\r\n            const superState = {\r\n                ...state,\r\n                isPreloaderActive: action.isActive\r\n            };\r\n            return superState;\r\n        }\r\n\r\n        case TOOGLE_FOLLOW_USER: {                          // меняем в редюсере items[i].followed\r\n            const superState = {\r\n                ...state,\r\n                items: state.items.map(item => {\r\n                    if (item.id === action.userId) {\r\n                        return { ...item, followed: action.isFollow };\r\n                    } else {\r\n                        return item;\r\n                    };\r\n                })\r\n            };\r\n            return superState;\r\n        }\r\n\r\n        case SET_FOLLOW_BUTTON_CLICKED_ID_INTO_STATE: {                          // чтобы показывать лоадер вместо кнопки\r\n            const superState = {\r\n                ...state,\r\n                clickedButtonsIds: [\r\n                    ...state.clickedButtonsIds,\r\n                    action.userId\r\n                ]\r\n            };\r\n            return superState;\r\n        }\r\n\r\n        case UN_SET_FOLLOW_BUTTON_CLICKED_ID_INTO_STATE: {                          // чтобы показывать кнопку вместо лоадера\r\n            const superState = {\r\n                ...state,\r\n                clickedButtonsIds: state.clickedButtonsIds.filter(id => id !== action.userId)                    // присвоим миссиву кнопок новый массив с удаленным id отработанной кнопки\r\n                // clickedButtonsIds: state.clickedButtonsIds.map(id => {\r\n                //     if(id === action.userId) {\r\n                //         return null;\r\n                //     } else {\r\n                //         return id;\r\n                //     }\r\n                // })\r\n            };\r\n            return superState;\r\n        }\r\n\r\n        case TOOGLE_IS_FIRST_USERS_LOADED: {                          // чтобы показывать кнопку вместо лоадера\r\n            const superState = {\r\n                ...state,\r\n                isFirstUsersLoaded: action.booleanVariable\r\n            };\r\n            return superState;\r\n        }\r\n\r\n        case SET_NUMBERS_IN_FIRST_LAST_PAGINATION_SQUARES: {\r\n            const superState = {\r\n                ...state,\r\n                numberInFirstPaginationSquare: action.numberInFirstPaginationSquare,\r\n                numberInLastPaginationSquare: action.numberInLastPaginationSquare\r\n            };\r\n            return superState;\r\n        }\r\n\r\n        default: return state;\r\n    }\r\n};\r\n\r\nexport default usersReducers;","import {createStore, combineReducers, applyMiddleware} from \"redux\";\r\nimport thunkMiddleWare from \"redux-thunk\";\r\nimport { reducer as formReducer } from \"redux-form\";\r\nimport { compose } from \"redux\";\r\nimport loginModalWindowReducer from \"../loginModalWindow/reducer\";\r\nimport authUserDataReducer from \"../authUserData/reducer\";\r\nimport headerReducer from \"../header/reducer\";\r\nimport initializedAppReducer from \"../initializedApp/reducer\";\r\nimport notOwnerUserDataReducer from \"../notOwnerUserData/reducer\";\r\nimport ownerProfilePageReducer from \"../ownerProfilePage/reducer\";\r\nimport usersReducers from \"../users/reducer\";\r\n\r\n\r\nlet reducers = combineReducers({\r\n    loginModalWindow: loginModalWindowReducer,\r\n    authUserData: authUserDataReducer,\r\n    header: headerReducer,\r\n    initializedApp: initializedAppReducer,\r\n    notOwnerUserData: notOwnerUserDataReducer,\r\n    ownerProfilePage: ownerProfilePageReducer,\r\n    users: usersReducers,\r\n    form: formReducer\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, /* preloadedState, */ composeEnhancers(\r\n    applyMiddleware(thunkMiddleWare)\r\n  ));                                       // это для использования extension'а redux dev tools в Google Chrome\r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport store from './BLL/redux_store/redux-store';\r\nimport { Provider } from 'react-redux';\r\n\r\nReactDOM.render(\r\n  // <React.StrictMode>\r\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </BrowserRouter>,\r\n  // </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","export const IS_MODAL_LOGIN_WINDOW_ACTIVE = 'socialNetwork/modalLoginWindow/IS_MODAL_LOGIN_WINDOW_ACTIVE';\r\nexport const IS_MODAL_LOGIN_WINDOW_BUTTON_CLICKED = 'socialNetwork/modalLoginWindow/IS_MODAL_LOGIN_WINDOW_BUTTON_CLICKED';\r\nexport const SET_CAPTCHA_INTO_STATE = 'socialNetwork/modalLoginWindow/SET_CAPTCHA_INTO_STATE';\r\nexport const SET_RESPONSE_ERROR_TEXT_INTO_STATE = 'socialNetwork/modalLoginWindow/SET_RESPONSE_ERROR_TEXT_INTO_STATE';\r\nexport const TOOGLE_IS_LOGIN_REQUIREMENT = 'socialNetwork/modalLoginWindow/TOOGLE_IS_LOGIN_REQUIREMENT';","import React from \"react\";\r\nimport cn from \"classnames\";\r\n\r\n\r\n/* Пример вызова:\r\n    <ButtonPreloader displayNone={!props.isSaveChangesButtonClicked} dotsCount={10} classes={[\"loader\"]} />\r\n*/\r\n\r\n/* props - объект:\r\nprops = {\r\n    displayNone: true,    // boolean - показывать ли прелоадер\r\n    dotsCount: 10         // integer - количество точек в анимации\r\n    classes: [\"loader\", \"loader_loginWindow-loginbutton\"]    // array - список css классов, кроме класса displaynone\r\n}\r\n*/\r\n\r\nconst ButtonPreloader = (props) => {\r\n    \r\n    let preloaderDots = [];\r\n    for (let i = 1; i <= props.dotsCount; i++) {\r\n        preloaderDots.push(<div id={\"fountainG_\" + i} className=\"fountainG\" key={i}></div>);\r\n    }\r\n\r\n    return (\r\n        <div className={cn(...props.classes, { \"displaynone\": props.displayNone })}>\r\n            { preloaderDots }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ButtonPreloader;","import * as axios from \"axios\";\r\n\r\nconst axiosInstance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: \"https://social-network.samuraijs.com/api/1.0/\",\r\n    headers: {\r\n        \"API-KEY\": \"9aff8b45-5e6b-4151-bfce-c962b4066e73\"\r\n    }\r\n});\r\n\r\nexport const userInfoAPI = {\r\n    getUserInfo(id) {\r\n        return axiosInstance.get(`profile/${id}`)\r\n            .then(response => {\r\n                return response.data;\r\n            });\r\n    },\r\n\r\n    getUserStatus(id) {\r\n        return axiosInstance.get(`profile/status/${id}`)\r\n            .then(response => {\r\n                return response.data;\r\n            });\r\n    },\r\n\r\n    updateOwnerStatus(status) {\r\n        return axiosInstance.put(`profile/status`, { status: status });\r\n    },\r\n\r\n    updateOwnerInfo(ownerInfoObj) {\r\n        return axiosInstance.put(`profile`, ownerInfoObj);\r\n    },\r\n\r\n    updateOwnerPhoto(photo) {\r\n        const formData = new FormData();\r\n        formData.append(\"image\", photo);   // первый аргумент, то что ожидает сервер, из API документации взято\r\n        return axiosInstance.put(`/profile/photo`, formData, {\r\n            headers: {\r\n                \"Content-Type\": \"multipart/form-data\"\r\n            }\r\n        });\r\n    }\r\n}","export const IS_HEADER_LOGIN_BUTTON_CLICKED = 'socialNetwork/header/IS_HEADER_LOGIN_BUTTON_CLICKED';\r\nexport const IS_HEADER_SEARCH_BUTTON_CLICKED = 'socialNetwork/header/IS_HEADER_SEARCH_BUTTON_CLICKED';","export const SET_USER_STATUS_INTO_STATE = 'socialNetwork/notOwnerUserData/SET_USER_STATUS_INTO_STATE';\r\nexport const SET_USER_INFO_INTO_STATE = 'socialNetwork/notOwnerUserData/SET_USER_INFO_INTO_STATE';","import React from \"react\";\r\nimport cn from \"classnames\";\r\n\r\n/* Пример применения компонента:\r\n    <InputReactHookForm\r\n        CSSclasses={[\"login__form-input\"]}          // - массив с перечислением классов CSS\r\n        register={props.register}\r\n        name=\"lookingForAJobDescription\"\r\n        errors={props.errors.lookingForAJobDescription}\r\n        minLength={3}\r\n        required={true}\r\n        placeholder={\"Enter Your Job Description\"}\r\n        onChangeOwnFunction={props.deleteErrorMessage}\r\n    />\r\n*/\r\n\r\nconst InputReactHookForm = (props) => {\r\n    return (\r\n        <>\r\n            <input\r\n                className={cn({ \"profile__item\": !props.errors }, { \"error__input\": props.errors }, [...props.CSSclasses])}\r\n                ref={props.register({ minLength: props.minLength, required: props.required })}\r\n                name={props.name}\r\n                type={props.type}\r\n                placeholder={props.placeholder}\r\n                onChange={props.onChangeOwnFunction}\r\n            />\r\n\r\n            {/* сообщения об ошибках */}\r\n            { props.errors\r\n                && props.errors.type === \"minLength\"\r\n                && <p className=\"animate__animated animate__lightSpeedInRight error__message\">\r\n                    Min {props.minLength} Symbols\r\n            </p> }\r\n            { props.errors\r\n                && props.errors.type === \"required\"\r\n                && <p className=\"animate__animated animate__lightSpeedInRight error__message\">\r\n                    Required Field\r\n            </p> }\r\n            {/* / сообщения об ошибках */}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default InputReactHookForm;","export const IS_OWNER_PROFILE_PAGE_SAVE_CHANGES_BUTTON_CLICKED = 'socialNetwork/ownerProfilePage/IS_OWNER_PROFILE_PAGE_SAVE_CHANGES_BUTTON_CLICKED';\r\nexport const IS_OWNER_PROFILE_PAGE_UPDATE_PHOTO_BUTTON_CLICKED = 'socialNetwork/ownerProfilePage/IS_OWNER_PROFILE_PAGE_UPDATE_PHOTO_BUTTON_CLICKED';","export default __webpack_public_path__ + \"static/media/default_photo.816d7d33.png\";","export const getIsLoggedInSelector =  (state) => {\r\n    return state.authUserData.isLoggedIn;\r\n}\r\n\r\nexport const getOwnerStatusSelector =  (state) => {\r\n    return state.authUserData.status;\r\n}\r\n\r\nexport const getOwnerFullNameSelector =  (state) => {\r\n    return state.authUserData.fullName;\r\n}\r\n\r\nexport const getOwnerSmallPhotoSelector =  (state) => {\r\n    return state.authUserData.photos.small;\r\n}\r\n\r\nexport const getOwnerLargePhotoSelector =  (state) => {\r\n    return state.authUserData.photos.large;\r\n}\r\n\r\nexport const getOwnerIdSelector =  (state) => {\r\n    return state.authUserData.id;\r\n}\r\n\r\nexport const getOwnerLookingForAJobSelector =  (state) => {\r\n    return state.authUserData.lookingForAJob;\r\n}\r\n\r\nexport const getOwnerLookingForAJobDescriptionSelector =  (state) => {\r\n    return state.authUserData.lookingForAJobDescription;\r\n}\r\n\r\nexport const getOwnerAboutMeSelector =  (state) => {\r\n    return state.authUserData.aboutMe;\r\n}\r\n\r\nexport const getOwnerContactsSelector =  (state) => {\r\n    return state.authUserData.contacts;\r\n}\r\n\r\nexport const getRunUseEffectAppComponent =  (state) => {\r\n    return state.authUserData.runUseEffectAppComponent;\r\n}","import {\r\n    SET_USER_STATUS_INTO_STATE,\r\n    SET_USER_INFO_INTO_STATE\r\n} from \"./actionTypes\";\r\n\r\nexport const setNotOwnerUserStatusIntoState = (userStatus) => ({ type: SET_USER_STATUS_INTO_STATE, status: userStatus });\r\n\r\nexport const setNotOwnerUserInfoIntoState = (userInfo) => {\r\n    return {\r\n        type: SET_USER_INFO_INTO_STATE,\r\n        id: userInfo.userId,\r\n        aboutMe: userInfo.aboutMe,\r\n        lookingForAJob: userInfo.lookingForAJob,\r\n        lookingForAJobDescription: userInfo.lookingForAJobDescription,\r\n        fullName: userInfo.fullName,\r\n        photoSmall: userInfo.photos.small,\r\n        photoLarge: userInfo.photos.large,\r\n        facebook: userInfo.contacts.facebook,\r\n        github: userInfo.contacts.github,\r\n        instagram: userInfo.contacts.instagram,\r\n        mainLink: userInfo.contacts.mainLink,\r\n        twitter: userInfo.contacts.twitter,\r\n        vk: userInfo.contacts.vk,\r\n        website: userInfo.contacts.website,\r\n        youtube: userInfo.contacts.youtube\r\n    }\r\n}","import { userInfoAPI } from \"../../DAL/userInfo/api\";\r\nimport {\r\n    setNotOwnerUserStatusIntoState,\r\n    setNotOwnerUserInfoIntoState\r\n} from \"./actionCreators\";\r\nimport { setIsHeaderSearchButtonClicked } from \"../header/actionCreators\";\r\n\r\nexport const notOwnerUserProfileThunkCreator = (id) => async (dispatch) => {\r\n    dispatch(setIsHeaderSearchButtonClicked(true));\r\n\r\n    const userInfo = await userInfoAPI.getUserInfo(id);\r\n\r\n    if (userInfo) {\r\n        dispatch(setNotOwnerUserInfoIntoState(userInfo));\r\n\r\n        const status = await userInfoAPI.getUserStatus(id);\r\n        if(status) {\r\n            dispatch(setNotOwnerUserStatusIntoState(status));\r\n        }\r\n    }\r\n    dispatch(setIsHeaderSearchButtonClicked(false));\r\n}"],"sourceRoot":""}